"<b> What is the value of s?</b><br><br>```<br>NSMutableString *s = [NSMutableString stringWithString: @""123""];<br>[s appendString: @""456""];<br>```<br><br><ul><li>123456</li><li>123</li><li>123</li><li>456</li><li>This code contains an error.</li></ul>",123456
<b> What's the value of i after these statements?</b><br><br>```<br>NSString *str = nil;<br>NSInteger i = str.integerValue;<br>```<br><br><ul><li>nil</li><li>0 (technically `nil` == 0 but i will have a literal value of `0` and not the `void*` value of `nil`)</li><li>-1</li><li>This code crashes.</li></ul>,0 (technically `nil` == 0 but i will have a literal value of `0` and not the `void*` value of `nil`)
"<b> What value is in str after this line in executed?</b><br><br>`NSString str = ""test"" + "" "" + ""more"";`<br><br><ul><li>This code contains an error</li><li>test</li><li>nil</li><li>test more</li></ul>",This code contains an error
"<b> What does this code print?</b><br><br>```<br>NSPredicate *p2 = [NSPredicate predicateWithBlock:^BOOL(NSString*  evaluatedObject, NSDictionary<NSString *,id> * _Nullable bindings) {<br>return evaluatedObject.intValue % 2 == 0;<br>}];<br>NSArray *vals = @[@""1"", @""2"", @""3""];<br>NSArray *n2 = [vals filteredArrayUsingPredicate:p2];<br>NSLog(@""%@"", n2.firstObject);<br>```<br><br><ul><li>2</li><li>1,2,3</li><li>1,2</li><li>Nothing, since this code contains an error.</li></ul>",2
<b> Property defaults include \_?</b><br><ul><li>atomic/strong</li><li>atomic/weak</li><li>nonatomic/weak</li><li>nonatomic/strong</li></ul>,atomic/strong
<b> What is the key difference between NSDictionary and NSMutableDictionary?</b><br><ul><li>NSMutableDictionary's values can change</li><li>NSMutableDictionary has not initializers.</li><li>NSDictionary can't be copied.</li><li>NSDictionary's values can change.</li></ul>,NSMutableDictionary's values can change
<b> What is foo?</b><br><br>`-(float)foo;`<br><br><ul><li>A function with a return type of float.</li><li>This code contains an error.</li><li>A variable declaration of type float.</li><li>A property of type float.</li></ul>,A function with a return type of float.
"<b> What can you glean from this line?</b><br><br>`#import ""NSString+NameHelper.h""`<br><br><ul><li>NameHelper is a category of NSString.</li><li>NameHelper is a subclass of NSString.</li><li>NSString implements the NameHelper protocol.</li><li>NSString has a helper class.</li></ul>",NameHelper is a category of NSString.
<b> What's wrong with this code?</b><br><br>`float x = 5.;`<br><br><ul><li>Nothing is wrong with this code.</li><li>Declarations do not need semicolons.</li><li>x=5 is an invalid float.</li><li>Variables can't be declared and initialized in the same state.</li></ul>,Nothing is wrong with this code.
<b> How many times with this loop be executed?</b><br><br>```<br>for (int x=0; x<100; x++) {<br>x = x + 1;<br>}<br>```<br><br><ul><li>50</li><li>99</li><li>100</li><li>This code contains an error.</li></ul>,50
"<b> What is this code an example of?</b><br><br>`[self addObserver: self forKeyPath: @""val"" options:0 context: nil];`<br><br><ul><li>Key-Value Observing</li><li>Class Value Observing</li><li>Key-Data Observing</li><li>KeyPath Observing</li></ul>",Key-Value Observing
<b> What does ARC stand for?</b><br><ul><li>Automatic Reference Counting</li><li>Automatic Retain Checking</li><li>Async Retain Cycles</li><li>Automatic Release Code</li></ul>,Automatic Reference Counting
"<b> What is printed for this code?</b><br><br>```<br>int val = 0;<br>val = 1.5;<br>printf(""%d"", val);<br>```<br><br><ul><li>1</li><li>2</li><li>0</li><li>This code contains an error.</li></ul>",1
<b> What best describes class inheritance in Objective-C?</b><br><ul><li>single inheritance but multiple protocol implementation</li><li>Objective-C doesn't support inheritance</li><li>dual class inheritance</li><li>unlimited class inheritance and protocol adherence</li></ul>,single inheritance but multiple protocol implementation
"<b> How many keys does this NSDictionary have after this code is executed?</b><br><br>`NSDictionary *dict = [[NSDictionary alloc] initWithObjectsAndKeys: @""b"", @""e"", @""a"", @""r"", nil];`<br><br><ul><li>2</li><li>4</li><li>5</li><li>This code contains an error.</li></ul>",2
"<b> What is wrong with this code?</b><br><br>```<br>NSMutableDictionary *dict1 = [NSMutableDictionary dictionaryWithCapacity:5];<br>[dict1 setValue:@""key"" forKey:@""value""];<br>```<br><br><ul><li>The key and value items are mixed</li><li>Nothing is wrong with it</li><li>You can't set the capacity of a dictionary</li><li>NSMutableDictionary doesn't have a :setValue:forKey function.</li></ul>",Nothing is wrong with it
"<b> What is printed from this code?</b><br><br>```<br>NSData *data = [@""print"" dataUsingEncoding:NSASCIIStringEncoding];<br>NSLog(@""%@"", [[NSString alloc] initWithData:data encoding:NSASCIIStringEncoding]);<br>```<br><br><ul><li>print</li><li>This code is invalid</li><li>Nothing is printed from this code.</li><li>nil</li></ul>",print
<b> What is different about this function?</b><br><br>`+(void)doSomething;`<br><br><ul><li>It is static</li><li>It is abstract.</li><li>It is inline.</li><li>This code contains an error.</li></ul>,It is static
<b> Structs can have \_?</b><br><ul><li>functions</li><li>initializers</li><li>fields</li><li>all of these answers</li></ul>,fields
"<b> What is wrong with this code?</b><br><br>```<br>@interface MyClass : NSObject<br>@property (strong, nonatomic, readonly) NSString *name;<br>@end<br>```<br><br><ul><li>There is nothing wrong with this code.</li><li>There is not read-only directive.</li><li>MyClass doesn't implement NSObject.</li><li>Properties are declared in the implementation.</li></ul>",There is nothing wrong with this code.
"<b> What is an enums base type for the code below?</b><br><br>`typedef enum { Foo1, Foo2} Foo;`<br><br><ul><li>There is no base type.</li><li>NSObject</li><li>int</li><li>NSNumber</li></ul>",There is no base type.
"<b> If you want to store a small amount of information (e.g., user settings), whats the best, built-in way to go?</b><br><ul><li>UserDefaults</li><li>plist file</li><li>CoreData</li><li>TextFile</li></ul>",UserDefaults
<b> What are categories used for?</b><br><ul><li>to extend other classes</li><li>to manage access control</li><li>to coordinate objects</li><li>to group classes</li></ul>,to extend other classes
<b> What is this Objective-C code checking?</b><br><br>```<br>if ([keyPath isInstanceOf:[NSString class]]) {<br>}<br>```<br><br><ul><li>This code contains an error</li><li>if keyPath is an instance of NSString</li><li>if keyPath's baseclass is the same as NSString's baseclass</li><li>if keyPath implements the same methods as NSString</li></ul>,This code contains an error
<b> What is this a declaration of?</b><br><br>`int(^foo)(int);`<br><br><ul><li>an Extension</li><li>a Generic</li><li>a block of code</li><li>an abstract class</li></ul>,a block of code
"<b> For observing changes to a property, which of these two statements cause the related method to be called and why?</b><br><br>```<br>1. _val = 1;<br>2. self.val= 100;<br>```<br><br><ul><li>Statement 2, since it calls the auto-created setter on the property.</li><li>Statement 1, since it uses the property directly.</li><li>Statement 2, since it specifies the class instance to use.</li><li>Statement 1, since it calls the auto-created setter on the property.</li></ul>","Statement 2, since it calls the auto-created setter on the property."
<b> What is wrong with this code?</b><br><br>```<br>float x = 2.0;<br>int(^foo)(int) = ^(int n1) {<br>return (int)(n1*x);<br>};<br>foo(5);<br>```<br><br><ul><li>Ints and floats can't be multiplied.</li><li>The parameter isn't declared correctly.</li><li>x is not in the right scope.</li><li>Nothing is wrong with this code.</li></ul>,Nothing is wrong with this code.
"<b> What's the difference between an array and a set?</b><br><ul><li>Arrays are ordered, non-unique values.</li><li>Arrays are stored sorted.</li><li>Sets are ordered, unique values.</li><li>Sets can contain nils.</li></ul>","Arrays are ordered, non-unique values."
"<b> Dot notation can be used for \_?</b><br><ul><li>nothing, as they're never used in Objective-C</li><li>function calls only</li><li>property getter/setter</li><li>parameter delimiters</li></ul>",property getter/setter
"<b> What is the value of newVals after this code is executed?</b><br><br>```<br>NSArray *vals = @[@""1"", @""2"", @""3""];<br>NSPredicate *pred = [NSPredicate predicateWithFormat:@""SELF.intValue > 1""];<br>NSArray *newVals = [vals filteredArrayUsingPredicate:pred];<br>```<br><br><ul><li>2,3</li><li>nil</li><li>This code contains an error</li><li>2,""3""</li></ul>","2,3"
"<b> How would this function be called?</b><br><br>`-(int)foo:(int)a b:(int)c;`<br><br><ul><li>self.foo(5, b:10);</li><li>This code contains an error.</li><li>[self foo:5:10:20];</li><li>[self foo:5 b:10];</li></ul>",[self foo:5 b:10];
<b> What is the type of the error return value stored in json?</b><br><br>```<br>NSError *error;<br>NSData *data;<br>id json = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:&error];<br>```<br><br><ul><li>NSString</li><li>NSArray</li><li>id</li><li>NSDictionary</li></ul>,id
<b> What is significant about this function declaration?</b><br><br>```<br>-(void)testFunc:(NSString**)str;<br>```<br><br><ul><li>The parameter is passed by value and can not be changed</li><li>\*\* is not allowed on a parameter</li><li>The parameter may be nil</li><li>The parameter is passed by reference and may be changed</li></ul>,The parameter is passed by reference and may be changed
"<b> What is printed from this code execution?</b><br><br>```<br>typedef enum {<br>thing1,<br>thing2,<br>thing3<br>} Thing;<br>-(void) enumStuff {<br>NSLog(@""%d"", thing2);<br>}<br>```<br><br><ul><li>0</li><li>1</li><li>thing2</li><li>This code does not print anything</li></ul>",1
<b> You are worried about threaded access to a property and possible collision in writing. What directive should you use on the property?</b><br><ul><li>non-atomic</li><li>strong</li><li>weak</li><li>atomic</li></ul>,atomic
<b> What is wrong with this line of code?</b><br><br>```<br>int temp = 1==1;<br>```<br><br><ul><li>`temp` is a keyword.</li><li>1==1 is invalid.</li><li>1==1 evaluates to a Boolean.</li><li>Nothing is wrong with it.</li></ul>,Nothing is wrong with it.
"<b> What is special about the code within this block?</b><br><br>```<br>dispatch_async(dispatch_get_main_queue(), ^{<br>// code<br>});<br>```<br><br><ul><li>It executes on the main queue.</li><li>It is the last code to run before the app goes inactive.</li><li>It executes on a background thread.</li><li>It is queued to execute in the background.</li></ul>",It executes on the main queue.
"<b> How many items are in set</b><br><br>```<br>NSMutableSet *set1 = [NSMutableSet setWithObjects: @1,@2, @3, @4, @5, nil];<br>[set1 add0bject:@3];<br>```<br><br><ul><li>zero</li><li>six</li><li>one</li><li>five</li></ul>",five
"<b> What is wrong with this code?</b><br><br>```<br>NSDictionary *d1 = @[@""v1"", @4, @""v2"", @5.6, @""v3""];<br>NSlog(@""d1: %@"", d1);<br>```<br><br><ul><li>NSDictionary cannot be printed this way.</li><li>The last key is missing a value.</li><li>Dictionaries cannot have mixed types as values.</li><li>d1 is assigned an NSArray of values.</li></ul>",The last key is missing a value.
"<b> What is the initial value of the property `val`?</b><br><br>```<br>@property (nonatomic, readonly) int val;<br>```<br><br><ul><li>8</li><li>nil</li><li>-1</li><li>undefined</li></ul>",undefined
<b> Which thread should UI updates be processed on to avoid crashes and application lag?</b><br><ul><li>UI</li><li>dispatch</li><li>background</li><li>main</li></ul>,UI
"<b> What is the value of val after this code is executed?</b><br><br>```<br>NSString *val = @""1.23"";<br>BOOL tf = val.boolValue;<br>```<br><br><ul><li>This code is invalid</li><li>YES</li><li>NO</li><li>1</li></ul>",NO
"<b> In this code, what does ThatOne refer to?</b><br><br>```<br>@interface TestClass : ThisOne <ThatOne><br>```<br><br><ul><li>the parent class of TestClass</li><li>the name of the category being created for ThisOne</li><li>a protocoL impLemented by ThisOne</li><li>a helper file's name</li></ul>",a protocoL impLemented by ThisOne
"<b> What is the value of result after this code is executed?</b><br><br>```<br>NSString *result = [Ftest""<br>stringByTrimmingCharactersInSet.NSCharacterSet.alphanumericCharacterSet];<br>```<br><br><ul><li>""""</li><li>""es""</li><li>""test""</li><li>none of these answers</li></ul>","""test"""
"<b> When will self receive the notification based on this code?</b><br><br>```<br>MyClass .classObj = [[MyClass allot] init];<br>[class0bj add0bserver:self forKeyPath:@""name""<br>options:NSKeyValueObservingOptionNew context:NULL];<br>```<br><br><ul><li>none of these answers</li><li>class0bj will recieve the notification, not self.</li><li>when class0bj is set to ""name""</li><li>when the name property in the class0bj instance changes</li></ul>",when the name property in the class0bj instance changes
"<b> What is wrong with this code?</b><br><br>```<br>[*""true"" boolValue];<br>```<br><br><ul><li>String literal are not created with*.</li><li>NSString doesn't have a boolValue function.</li><li>""true"" has no meaning.</li><li>There is nothing wrong with this code.</li></ul>",NSString doesn't have a boolValue function.
<b> How many times does this loop execute?</b><br><br>```<br>int loopVal = 0;<br>for (int i=0; i>loopVal; i--){<br>i--;<br>}<br>```<br><br><ul><li>an infinite number of times</li><li>This code is invalid.</li><li>zero</li><li>one</li></ul>,zero
"<b> What will this code print?</b><br><br>```<br>NSLog(@""%lu"", @""test"".length);<br>```<br><br><ul><li>""test""</li><li>Nothing, this code is invalid.</li><li>4</li><li>0</li></ul>",4
<b> What is the value of numVtoInt after this code is executed?</b><br><br>```<br>NSNumber *numV = [NSNumber numberWithFloat:6.7];<br>int numVtoInt = numV.intValue;<br>```<br><br><ul><li>6</li><li>0</li><li>6.7</li><li>7</li></ul>,7
"<b> What does this code print?</b><br><br>```<br>NSString *val = @""1.23"";<br>NSLog(@""%.04f"", val.floatValue);<br>```<br><br><ul><li>1.2300</li><li>.04</li><li>This code is invalid</li><li>1</li></ul>",1.2300
