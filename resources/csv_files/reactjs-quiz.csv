"<b> If you want to import just the Component from the React library, what syntax do you use?</b><br><ul><li>`import React.Component from 'react'`</li><li>`import [ Component ] from 'react'`</li><li>`import Component from 'react'`</li><li>`import { Component } from 'react'`</li></ul>",`import { Component } from 'react'`
"<b> If a function component should always render the same way given the same props, what is a simple performance optimization available for it?</b><br><ul><li>Wrap it in the `React.memo` higher-order component.</li><li>Implement the `useReducer` Hook.</li><li>Implement the `useMemo` Hook.</li><li>Implement the `shouldComponentUpdate` lifecycle method.</li></ul>",Wrap it in the `React.memo` higher-order component.
"<b> How do you fix the syntax error that results from running this code?</b><br><br>```javascript<br>const person =(firstName, lastName) =><br>{<br>first: firstName,<br>last: lastName<br>}<br>console.log(person(""Jill"", ""Wilson""))<br>```<br><br><ul><li>Wrap the object in parentheses.</li><li>Call the function from another file.</li><li>Add a return statement before the first curly brace.</li><li>Replace the object with an array.</li></ul>",Wrap the object in parentheses.
"<b> If you see the following import in a file, what is being used for state management in the component?</b><br><br>`import React, {useState} from 'react';`<br><br><ul><li>React Hooks</li><li>stateful components</li><li>math</li><li>class components</li></ul>",React Hooks
"<b> Using object literal enhancement, you can put values back into an object. When you log person to the console, what is the output?</b><br><br>```javascript<br>const name = 'Rachel';<br>const age = 31;<br>const person = { name, age };<br>console.log(person);<br>```<br><br><ul><li>`{{name: ""Rachel"", age: 31}}`</li><li>`{name: ""Rachel"", age: 31}`</li><li>`{person: ""Rachel"", person: 31}}`</li><li>`{person: {name: ""Rachel"", age: 31}}`</li></ul>","`{name: ""Rachel"", age: 31}`"
<b> What is the testing library most often associated with React?</b><br><ul><li>Mocha</li><li>Chai</li><li>Sinon</li><li>Jest</li></ul>,Jest
"<b> To get the first item from the array (""cooking"") using array destructuring, how do you adjust this line?</b><br><br>```javascript<br>const topics = ['cooking', 'art', 'history'];<br>```<br><br><ul><li>`const first = [""cooking"", ""art"", ""history""]`</li><li>`const [] = [""cooking"", ""art"", ""history""]`</li><li>`const [, first][""cooking"", ""art"", ""history""]`</li><li>`const [first] = [""cooking"", ""art"", ""history""]`</li></ul>","`const [first] = [""cooking"", ""art"", ""history""]`"
<b> How do you handle passing through the component tree without having to pass props down manually at every level?</b><br><ul><li>React Send</li><li>React Pinpoint</li><li>React Router</li><li>React Context</li></ul>,React Context
"<b> What should the console read when the following code is run?</b><br><br>```javascript<br>const [, , animal] = ['Horse', 'Mouse', 'Cat'];<br>console.log(animal);<br>```<br><br><ul><li>Horse</li><li>Cat</li><li>Mouse</li><li>undefined</li></ul>",Cat
<b> What is the name of the tool used to take JSX and turn it into createElement calls?</b><br><ul><li>JSX Editor</li><li>ReactDOM</li><li>Browser Buddy</li><li>Babel</li></ul>,Babel
<b> Why might you use useReducer over useState in a React component?</b><br><ul><li>when you want to replace Redux</li><li>when you need to manage more complex state in an app</li><li>when you want to improve performance</li><li>when you want to break your production app</li></ul>,when you need to manage more complex state in an app
<b> Which props from the props object is available to the component with the following syntax?</b><br><br>```javascript<br><Message {...props} /><br>```<br><br><ul><li>any that have not changed</li><li>all of them</li><li>child props</li><li>any that have changed</li></ul>,all of them
"<b> Consider the following code from React Router. What do you call :id in the path prop?</b><br><br>```javascript<br><Route path=""/:id"" /><br>```<br><br><ul><li>This is a route modal</li><li>This is a route parameter</li><li>This is a route splitter</li><li>This is a route link</li></ul>",This is a route parameter
"<b> If you created a component called Dish and rendered it to the DOM, what type of element would be rendered?</b><br><br>```javascript<br>function Dish() {<br>return <h1>Mac and Cheese</h1>;<br>}<br>ReactDOM.render(<Dish />, document.getElementById('root'));<br>```<br><br><ul><li>`div`</li><li>section</li><li>component</li><li>`h1`</li></ul>",`h1`
"<b> What does this React element look like given the following function? (Alternative: Given the following code, what does this React element look like?)</b><br><br>```javascript<br>React.createElement('h1', null, ""What's happening?"");<br>```<br><br><ul><li>`<h1 props={null}>What's happening?</h1>`</li><li>`<h1>What's happening?</h1>`</li><li>`<h1 id=""component"">What's happening?</h1>`</li><li>`<h1 id=""element"">What's happening?</h1>`</li></ul>",`<h1>What's happening?</h1>`
<b> What property do you need to add to the Suspense component in order to display a spinner or loading state?</b><br><br>```javascript<br>function MyComponent() {<br>return (<br><Suspense><br><div><br><Message /><br></div><br></Suspense><br>);<br>}<br>```<br><br><ul><li>lazy</li><li>loading</li><li>fallback</li><li>spinner</li></ul>,fallback
<b> What do you call the message wrapped in curly braces below?</b><br><br>```javascript<br>const message = 'Hi there';<br>const element = <p>{message}</p>;<br>```<br><br><ul><li>a JS function</li><li>a JS element</li><li>a JS expression</li><li>a JSX wrapper</li></ul>,a JS expression
<b> What can you use to handle code splitting?</b><br><ul><li>`React.memo`</li><li>`React.split`</li><li>`React.lazy`</li><li>`React.fallback`</li></ul>,`React.lazy`
<b> When do you use `useLayoutEffect`?</b><br><ul><li>to optimize for all devices</li><li>to complete the update</li><li>to change the layout of the screen</li><li>when you need the browser to paint before the effect runs</li></ul>,when you need the browser to paint before the effect runs
<b> What is the difference between the click behaviors of these two buttons (assuming that this.handleClick is bound correctly)?</b><br><br>```javascript<br>A. <button onClick={this.handleClick}>Click Me</button><br>B. <button onClick={event => this.handleClick(event)}>Click Me</button><br>```<br><br><ul><li>Button A will not have access to the event object on click of the button.</li><li>Button B will not fire the handler this.handleClick successfully.</li><li>Button A will not fire the handler this.handleClick successfully.</li><li>There is no difference.</li></ul>,There is no difference.
"<b> How do you destructure the properties that are sent to the Dish component?</b><br><br>```javascript<br>function Dish(props) {<br>return (<br><h1><br>{props.name} {props.cookingTime}<br></h1><br>);<br>}<br>```<br><br><ul><li>`function Dish([name, cookingTime]) { return <h1>{name} {cookingTime}</h1>; }`</li><li>`function Dish({name, cookingTime}) { return <h1>{name} {cookingTime}</h1>; }`</li><li>`function Dish(props) { return <h1>{name} {cookingTime}</h1>; }`</li><li>`function Dish(...props) { return <h1>{name} {cookingTime}</h1>; }`</li></ul>","`function Dish({name, cookingTime}) { return <h1>{name} {cookingTime}</h1>; }`"
<b> When might you use `React.PureComponent`?</b><br><ul><li>when you do not want your component to have props</li><li>when you have sibling components that need to be compared</li><li>when you want a default implementation of `shouldComponentUpdate()`</li><li>when you do not want your component to have state</li></ul>,when you want a default implementation of `shouldComponentUpdate()`
<b> Why is it important to avoid copying the values of props into a component's state where possible?</b><br><ul><li>because you should never mutate state</li><li>because `getDerivedStateFromProps()` is an unsafe method to use</li><li>because you want to allow a component to update in response to changes in the props</li><li>because you want to allow data to flow back up to the parent</li></ul>,because you want to allow a component to update in response to changes in the props
<b> What is the children prop?</b><br><ul><li>a property that adds child components to state</li><li>a property that lets you pass components as data to other components</li><li>a property that lets you set an array as a property</li><li>a property that lets you pass data to child elements</li></ul>,a property that lets you pass components as data to other components
<b> Which attribute do you use to replace innerHTML in the browser DOM?</b><br><ul><li>injectHTML</li><li>dangerouslySetInnerHTML</li><li>weirdSetInnerHTML</li><li>strangeHTML</li></ul>,dangerouslySetInnerHTML
<b> Which of these terms commonly describe React applications?</b><br><ul><li>declarative</li><li>integrated</li><li>closed</li><li>imperative</li></ul>,declarative
"<b> When using webpack, why would you need to use a loader?</b><br><ul><li>to put together physical file folders</li><li>to preprocess files</li><li>to load external data</li><li>to load the website into everyone's phone</li></ul>",to preprocess files
"<b> A representation of a user interface that is kept in memory and is synced with the ""real"" DOM is called what?</b><br><ul><li>virtual DOM</li><li>DOM</li><li>virtual elements</li><li>shadow DOM</li></ul>",virtual DOM
<b> You have written the following code but nothing is rendering. How do you fix this problem?</b><br><br>```javascript<br>const Heading = () => {<br><h1>Hello!</h1>;<br>};<br>```<br><br><ul><li>Add a render function.</li><li>Change the curly braces to parentheses or add a return statement before the `h1` tag.</li><li>Move the `h1` to another component.</li><li>Surround the `h1` in a `div`.</li></ul>,Change the curly braces to parentheses or add a return statement before the `h1` tag.
"<b> To create a constant in JavaScript, which keyword do you use?</b><br><ul><li>const</li><li>let</li><li>constant</li><li>var</li></ul>",const
<b> What do you call a React component that catches JavaScript errors anywhere in the child component tree?</b><br><ul><li>error bosses</li><li>error catchers</li><li>error helpers</li><li>error boundaries</li></ul>,error boundaries
<b> In which lifecycle method do you make requests for data in a class component?</b><br><ul><li>constructor</li><li>componentDidMount</li><li>componentWillReceiveProps</li><li>componentWillMount</li></ul>,componentDidMount
<b> React components are composed to create a user interface. How are components composed?</b><br><ul><li>by putting them in the same file</li><li>by nesting components</li><li>with webpack</li><li>with code splitting</li></ul>,by nesting components
<b> All React components must act like **\_** with respect to their props.</b><br><ul><li>monads</li><li>pure functions</li><li>recursive functions</li><li>higher-order functions</li></ul>,pure functions
<b> What is `[e.target.id]` called in the following code snippet?</b><br><br>```javascript<br>handleChange(e) {<br>this.setState({ [e.target.id]: e.target.value })<br>}<br>```<br><br><ul><li>a computed property name</li><li>a set value</li><li>a dynamic key</li><li>a JSX code string</li></ul>,a dynamic key
<b> What is the name of this component?</b><br><br>```javascript<br>class Clock extends React.Component {<br>render() {<br>return <h1>Look at the time: {time}</h1>;<br>}<br>}<br>```<br><br><ul><li>Clock</li><li>It does not have a name prop.</li><li>React.Component</li><li>Component</li></ul>,Clock
<b> What is sent to an `Array.map()` function?</b><br><ul><li>a callback function that is called once for each element in the array</li><li>the name of another array to iterate over</li><li>the number of times you want to call the function</li><li>a string describing what the function should do</li></ul>,a callback function that is called once for each element in the array
<b> Why is it a good idea to pass a function to `setState` instead of an object?</b><br><ul><li>It provides better encapsulation.</li><li>It makes sure that the object is not mutated.</li><li>It automatically updates a component.</li><li>`setState` is asynchronous and might result in out of sync values.</li></ul>,"`setState` is asynchronous and might result in out of sync values.<br><br>**Explanation:** Because `this.props` and `this.state` may be updated asynchronously, you should not rely on their values for calculating the next state.<br>Read [this article](https://medium.com/@wisecobbler/using-a-function-in-setstate-instead-of-an-object-1f5cfd6e55d1)<br>"
<b> What package contains the render() function that renders a React element tree to the DOM?</b><br><ul><li>`React`</li><li>`ReactDOM`</li><li>`Render`</li><li>`DOM`</li></ul>,`ReactDOM`
<b> How do you set a default value for an uncontrolled form field?</b><br><ul><li>Use the `value` property.</li><li>Use the `defaultValue` property.</li><li>Use the `default` property.</li><li>It assigns one automatically.</li></ul>,Use the `defaultValue` property.
<b> What do you need to change about this code to get it to run?</b><br><br>```js<br>class clock extends React.Component {<br>render() {<br>return <h1>Look at the time: {this.props.time}</h1>;<br>}<br>}<br>```<br><br><ul><li>Add quotes around the return value</li><li>Remove `this`</li><li>Remove the render method</li><li>Capitalize `clock`</li></ul>,"Capitalize `clock`<br><br>**Explanation:** In JSX, lower-case tag names are considered to be HTML tags.<br>Read [this article](https://reactjs.org/docs/jsx-in-depth.html#html-tags-vs.-react-components)<br>"
<b> Which Hook could be used to update the document's title?</b><br><ul><li>`useEffect(function updateTitle() { document.title = name + ' ' + lastname; });`</li><li>`useEffect(() => { title = name + ' ' + lastname; });`</li><li>`useEffect(function updateTitle() { name + ' ' + lastname; });`</li><li>`useEffect(function updateTitle() { title = name + ' ' + lastname; });`</li></ul>,`useEffect(function updateTitle() { document.title = name + ' ' + lastname; });`
<b> What can you use to wrap Component imports in order to load them lazily?</b><br><ul><li>`React.fallback`</li><li>`React.split`</li><li>`React.lazy`</li><li>`React.memo`</li></ul>,`React.lazy`
"<b> How do you invoke setDone only when component mounts, using hooks?</b><br><br>```javascript<br>function MyComponent(props) {<br>const [done, setDone] = useState(false);<br>return <h1>Done: {done}</h1>;<br>}<br>```<br><br><ul><li>`useEffect(() => { setDone(true); });`</li><li>`useEffect(() => { setDone(true); }, []);`</li><li>`useEffect(() => { setDone(true); }, [setDone]);`</li><li>`useEffect(() => { setDone(true); }, [done, setDone]);`</li></ul>","`useEffect(() => { setDone(true); }, []);`"
"<b> Currently, `handleClick` is being called instead of passed as a reference. How do you fix this?</b><br><br>```javascript<br><button onClick={this.handleClick()}>Click this</button><br>```<br><br><ul><li>`<button onClick={this.handleClick.bind(handleClick)}>Click this</button>`</li><li>`<button onClick={handleClick()}>Click this</button>`</li><li>`<button onClick={this.handleClick}>Click this</button>`</li><li>`<button onclick={this.handleClick}>Click this</button>`</li></ul>",`<button onClick={this.handleClick}>Click this</button>`
<b> Which answer best describes a function component?</b><br><ul><li>A function component is the same as a class component.</li><li>A function component accepts a single props object and returns a React element.</li><li>A function component is the only way to create a component.</li><li>A function component is required to create a React component.</li></ul>,A function component accepts a single props object and returns a React element.
<b> Which library does the `fetch()` function come from?</b><br><ul><li>FetchJS</li><li>ReactDOM</li><li>No library. `fetch()` is supported by most browsers.</li><li>React</li></ul>,No library. `fetch()` is supported by most browsers.
"<b> What will happen when this useEffect Hook is executed, assuming name is not already equal to John?</b><br><br>```javascript<br>useEffect(() => {<br>setName('John');<br>}, [name]);<br>```<br><br><ul><li>It will cause an error immediately.</li><li>It will execute the code inside the function, but only after waiting to ensure that no other component is accessing the name variable.</li><li>It will update the value of name once and not run again until name is changed from the outside.</li><li>It will cause an infinite loop.</li></ul>",It will update the value of name once and not run again until name is changed from the outside.
<b> Which choice will not cause a React component to rerender?</b><br><ul><li>if the component calls `this.setState(...)`</li><li>the value of one of the component's props changes</li><li>if the component calls `this.forceUpdate()`</li><li>one of the component's siblings rerenders</li></ul>,one of the component's siblings rerenders
"<b> You have created a new method in a class component called handleClick, but it is not working. Which code is missing?</b><br><br>```javascript<br>class Button extends React.Component{<br>constructor(props) {<br>super(props);<br>// Missing line<br>}<br>handleClick() {...}<br>}<br>```<br><br><ul><li>`this.handleClick.bind(this);`</li><li>`props.bind(handleClick);`</li><li>`this.handleClick.bind();`</li><li>`this.handleClick = this.handleClick.bind(this);`</li></ul>",`this.handleClick = this.handleClick.bind(this);`
<b> React does not render two sibling elements unless they are wrapped in a fragment. Below is one way to render a fragment. What is the shorthand for this?</b><br><br>```javascript<br><React.Fragment><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br></React.Fragment><br>```<br><br><ul><li>A```javascript<br><...><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br></...><br>```<br></li><li>B```javascript<br><//><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br><///><br>```<br></li><li>C```javascript<br><><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br></><br>```<br></li><li>D```javascript<br><Frag><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br></Frag><br>```<br></li></ul>,C```javascript<br><><br><h1>Our Staff</h1><br><p>Our staff is available 9-5 to answer your questions</p><br></><br>```<br>
"<b> If you wanted to display the count state value in the component, what do you need to add to the curly braces in the `h</b><br><br>```javascript<br>class Ticker extends React.component {<br>constructor(props) {<br>super(props);<br>this.state = { count: 0 };<br>}<br>render() {<br>return <h1>{}</h1>;<br>}<br>}<br>```<br><br><ul><li>this.state.count</li><li>count</li><li>state</li><li>state.count</li></ul>",this.state.count
"<b> Per the following code, when is the Hello component displayed?</b><br><br>```javascript<br>const greeting = isLoggedIn ? <Hello /> : null;<br>```<br><br><ul><li>never</li><li>when `isLoggedIn` is true</li><li>when a user logs in</li><li>when the Hello function is called</li></ul>",when `isLoggedIn` is true
"<b> In the following code block, what type is orderNumber?</b><br><br>```javascript<br>ReactDOM.render(<Message orderNumber=""16"" />, document.getElementById('root'));<br>```<br><br><ul><li>string</li><li>boolean</li><li>object</li><li>number</li></ul>",string
"<b> You have added a style property to the `h</b><br><br>```javascript<br>const element = <h1 style={ backgroundColor: ""blue"" }>Hi</h1>;<br>```<br><br><ul><li>`const element = <h1 style=""backgroundColor: ""blue""""}>Hi</h1>;`</li><li>`const element = <h1 style={{backgroundColor: ""blue""}}>Hi</h1>;`</li><li>`const element = <h1 style={blue}>Hi</h1>;`</li><li>`const element = <h1 style=""blue"">Hi</h1>;`</li></ul>","`const element = <h1 style={{backgroundColor: ""blue""}}>Hi</h1>;`"
<b> Which function is used to update state variables in a React class component?</b><br><ul><li>`replaceState`</li><li>`refreshState`</li><li>`updateState`</li><li>`setState`</li></ul>,`setState`
<b> Consider the following component. What is the default color for the star?</b><br><br>```javascript<br>const Star = ({ selected = false }) => <Icon color={selected ? 'red' : 'grey'} />;<br>```<br><br><ul><li>black</li><li>red</li><li>grey</li><li>white</li></ul>,grey
<b> What is the difference between the click behaviors of these two buttons(assuming that this.handleClick is bound correctly)</b><br><br>```javascript<br>A. <button onClick=this.handleClick>Click Me</button><br>B. <button onClick={event => this.handleClick(event)}>Click Me</button><br>```<br><br><ul><li>`Button A will not have access to the event object on click of the button`</li><li>`Button A will not fire the handler this.handleClick successfully`</li><li>`There is no difference`</li><li>`Button B will not fire the handler this.handleClick successfully`</li></ul>,`Button A will not fire the handler this.handleClick successfully`
"<b> How would you add to this code, from React Router, to display a component called About?</b><br><br>```javascript<br><Route path=""/:id"" /><br>```<br><br><ul><li>A```javascript<br><Route path=""/:id""><br>{' '}<br><About /><br></Route><br>```<br></li><li>B```javascript<br><Route path=""/tid"" about={Component} /><br>```<br></li><li>C```javascript<br><Route path=""/:id"" route={About} /><br>```<br></li><li>D```javascript<br><Route><br><About path=""/:id"" /><br></Route><br>```<br></li></ul>","A```javascript<br><Route path=""/:id""><br>{' '}<br><About /><br></Route><br>```<br>"
<b> Which class-based component is equivalent to this function component?</b><br><br>```javascript<br>const Greeting = ({ name }) => <h1>Hello {name}!</h1>;<br>```<br><br><ul><li>A```javascript<br>class Greeting extends React.Component {<br>constructor() {<br>return <h1>Hello {this.props.name}!</h1>;<br>}<br>}<br>```<br></li><li>B```javascript<br>class Greeting extends React.Component {<br><h1>Hello {this.props.name}!</h1>;<br>}<br>```<br></li><li>C```javascript<br>class Greeting extends React.Component {<br>render() {<br>return <h1>Hello {this.props.name}!</h1>;<br>}<br>}<br>```<br></li><li>D```javascript<br>class Greeting extends React.Component {<br>render({ name }) {<br>return <h1>Hello {name}!</h1>;<br>}<br>}<br>```<br></li></ul>,C```javascript<br>class Greeting extends React.Component {<br>render() {<br>return <h1>Hello {this.props.name}!</h1>;<br>}<br>}<br>```<br>
"<b> Give the code below, what does the second argument that is sent to the render function describe?</b><br><br>```javascript<br>ReactDOM.render(<br><h1>Hi<h1>,<br>document.getElementById('root')<br>)<br>```<br><br><ul><li>where the React element should be added to the DOM</li><li>where to call the function</li><li>where the root component is</li><li>where to create a new JavaScript file</li></ul>",where the React element should be added to the DOM
"<b> Why should you use React Router's Link component instead of a basic `<a>` tag in React?</b><br><ul><li>The link component allows the user to use the browser's `Back` button.</li><li>There is no difference--the `Link` component is just another name for the `<a>` tag.</li><li>The `<a>` tag will cause an error when used in React.</li><li>The `<a>` tag triggers a full page reload, while the `Link` component does not.</li></ul>","The `<a>` tag triggers a full page reload, while the `Link` component does not."
"<b> What is the first argument, `x`, that is sent to the `createElement` function?</b><br><br>```javascript<br>React.createElement(x, y, z);<br>```<br><br><ul><li>the element that should be created</li><li>the order in which this element should be placed on the page</li><li>the properties of the element</li><li>data that should be displayed in the element</li></ul>",the element that should be created
"<b> Which class-based lifecycle method would be called at the same time as this effect Hook?</b><br><br>```javascript<br>useEffect(() => {<br>// do things<br>}, []);<br>```<br><br><ul><li>componentWillUnmount</li><li>componentDidMount</li><li>render</li><li>componentDidUpdate</li></ul>",componentDidMount
<b> What is the name of this component?</b><br><br>```javascript<br>class Comp extends React.Component {<br>render() {<br>return <h1>Look at the time: {time}</h1>;<br>}<br>}<br>```<br><br><ul><li>Comp</li><li>h1</li><li>React.Component</li><li>ComponentThis question might be an updated version of Q37.<br></li></ul>,Comp
"<b> When using a portal, what is the first argument?</b><br><br>```javascript<br>ReactDOM.createPortal(x, y);<br>```<br><br><ul><li>the current state</li><li>the element to render</li><li>the App component</li><li>the page</li></ul>",the element to render<br><br>**Explanation:**<br>From official docs: [Portals](https://reactjs.org/docs/portals.html)<br>
"<b> What is `setCount`?</b><br><br>```javascript<br>const [count, setCount] = useState(0);<br>```<br><br><ul><li>the initial state value</li><li>a variable</li><li>a state object</li><li>a function to update the state</li></ul>",a function to update the state<br><br>**Reference:**<br>From official docs: [Hooks-State](https://reactjs.org/docs/hooks-state.html#:~:text=If%20we%20want%20to%20update%20the%20current)<br>
"<b> What is the use of map function below?</b><br><br>```javascript<br>const database = [user1:{},user2:{},user3:{}];<br>database.map((user)=><h1>user.data</h1>);<br>```<br><br><ul><li>gives a map of all the entries in database</li><li>returns a heading tag for every entry in the database containing it's data</li><li>returns one heading tag for all the entries in database</li><li>checks which entry in the database is suitable for heading tag</li></ul>",returns a heading tag for every entry in the database containing it's data
<b> Describe what is happening in this code?</b><br><br>```javascript<br>const { name: firstName } = person;<br>```<br><br><ul><li>It is creating a new object that contains the same name property as the person object.</li><li>It is assigning the value of the person object's firstName property to a constant called name.</li><li>It is retrieving the value of person.name.firstName.</li><li>It is assigning the value of the person object's name property to a constant called firstName.</li></ul>,It is assigning the value of the person object's name property to a constant called firstName.
<b> What is wrong with this code?</b><br><br>```javascript<br>const MyComponent = ({ names }) => (<br><h1>Hello</h1><br><p>Hello again</p><br>);<br>```<br><br><ul><li>React components cannot be defined using functions.</li><li>React does not allow components to return more than one element.</li><li>The component needs to use the return keyword.</li><li>String literals must be surrounded by quotes.</li></ul>,React does not allow components to return more than one element.
"<b> When using a portal, what is the second argument?</b><br><br>```javascript<br>ReactDOM.createPortal(x, y);<br>```<br><br><ul><li>the App component</li><li>the page</li><li>the current state</li><li>the DOM element that exists outside of the parent component</li></ul>",the DOM element that exists outside of the parent component
"<b> Given this code, what will be printed in the `<h</b><br><br>```javascript<br>const MyComponent = ({ children }) => (<br><h1>{children.length}</h1><br>);<br>...<br><MyComponent><br><p>Hello</p><br><p>Goodbye</p><br></MyComponent><br>```<br><br><ul><li>It will produce an error saying ""cannot read property ""length"" of undefined.""</li><li>1</li><li>undefined</li><li>2</li></ul>",2
"<b> What is this pattern called?</b><br><br>```javascript<br>const [count, setCount] = useState(0);<br>```<br><br><ul><li>object destructuring</li><li>array destructuring</li><li>spread operating</li><li>code pushing</li></ul>",array destructuring
<b> What is the first file loaded by the browser in a basic React project?</b><br><ul><li>src/App.js</li><li>src/index.js</li><li>public/manifest.json</li><li>public/index.html</li></ul>,public/index.html
"<b> The code below is rendering nothing, and there is an error that says ""ReactDOM is not defined."" How do you fix this issue?</b><br><br>```javascript<br>import React from 'react';<br>import { render } from 'react-dom';<br>const element = <h1>Hi</h1>;<br>ReactDOM.render(element, document.getElementById('root'));<br>```<br><br><ul><li>`render(element, document.getElementById(""root""));`</li><li>`ReactDOM(element, document.getElementById(""root""));`</li><li>`renderDOM(element, document.getElementById(""root""));`</li><li>`DOM(element, document.getElementById(""root""));`</li></ul>","`render(element, document.getElementById(""root""));`"
"<b> In this component, how do you display whether the user was logged in or not?</b><br><br>```javascript<br>render() {<br>const isLoggedIn = this.state.isLoggedIn;<br>return (<br><div><br>The user is:<br></div><br>);<br>}<br>```<br><br><ul><li>`The user is loggedIn ? logged in : not logged in.`</li><li>Write a function to check the login status.</li><li>`The user is {isLoggedIn = ""no""}.`</li><li>`The user is {isLoggedIn ? ""logged in."" : ""not logged in""}.`</li></ul>","`The user is {isLoggedIn ? ""logged in."" : ""not logged in""}.`"
"<b> You are rendering a list with React when this warning appears in the console: ""Warning: Each child in a list should have a unique 'key' prop."" How do you fix this issue?</b><br><ul><li>Pass the name of each item as its key.</li><li>Add a key prop with the same value to each item the list.</li><li>Clear the console warnings.</li><li>When iterating over the list items, add a unique property to each list item.</li></ul>","When iterating over the list items, add a unique property to each list item."
<b> How would you generate the boilerplate code for a new app that you are building to collect underpants?</b><br><ul><li>npm create-react-app collect-underpants</li><li>npx start-app collect-underpants</li><li>react new collect-underpants</li><li>npx create-react-app collect-underpants</li></ul>,npx create-react-app collect-underpants<br><br>[Source: React Docs](https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)<br>
<b> Add the code that will fire the photon torpedoes when the button is clicked.</b><br><br>```javascript<br>class StarTrekkin extends React.Component {<br>firePhotonTorpedoes(e) {<br>console.log('pew pew');<br>}<br>render() {<br>return; // Missing code<br>}<br>}<br>```<br><br><ul><li>`<button onClick={firePhotonTorpedoes()}>Pew Pew</button>`</li><li>`<button onClick={firePhotonTorpedoes}>Pew Pew</button>`</li><li>`<button onClick={this.firePhotonTorpedoes()}>Pew Pew</button>`</li><li>`<button onClick={this.firePhotonTorpedoes}>Pew Pew</button>`</li></ul>,`<button onClick={this.firePhotonTorpedoes}>Pew Pew</button>`<br><br>[Source: React Docs](https://reactjs.org/docs/handling-events.html)<br>
<b> What is the process of deciding whether an update is necessary?</b><br><ul><li>shadow DOM</li><li>fiber</li><li>reconciliation</li><li>setting state</li></ul>,reconciliation
<b> React is an open-source project but is maintained by which company?</b><br><ul><li>Intuit</li><li>Twitter</li><li>Facebook</li><li>Snapchat</li></ul>,Facebook
<b> What command can you use to generate a React project?</b><br><ul><li>react-starter</li><li>create-react-app</li><li>react-gen</li><li>react-start</li></ul>,create-react-app
<b> What is the browser extension called that React developers use to debug applications?</b><br><ul><li>React Developer Tools</li><li>React Tooling Add-on</li><li>React Codewatch</li><li>React Debug</li></ul>,React Developer Tools
<b> Which tool is not part of Create React App?</b><br><ul><li>React</li><li>jQuery</li><li>webpack</li><li>ReactDOM</li></ul>,jQuery
<b> What is the JavaScript syntax extension that is commonly used to create React elements?</b><br><ul><li>HTML</li><li>JavaScriptX</li><li>JSX</li><li>React JavaScript</li></ul>,JSX
<b> How might you check property types without using Flow or TypeScript?</b><br><ul><li>Check Manually.</li><li>Use `prop-helper`.</li><li>use `prop-types`.</li><li>user `checker-types`.</li></ul>,use `prop-types`.
"<b> How do you add an id of heading to the following h</b><br><br>`let dish = <h1>Mac and Cheese</h1>; `<br><br><ul><li>`let dish = <h1 id={heading}>Mac and Cheese</h1>;`</li><li>`let dish = <h1 id=""heading"">Mac and Cheese</h1>;`</li><li>`let dish = <h1 id:""heading"">Mac and Cheese</h1>;`</li><li>`let dish = <h1 class=""heading"">Mac and Cheese</h1>;`</li></ul>","`let dish = <h1 id=""heading"">Mac and Cheese</h1>;`"
"<b> What value of button will allow you to pass the name of the person to be hugged?</b><br><br>```<br>class Huggable extends React.Component {<br>hug(id) {<br>console.log(""hugging "" + id);<br>}<br>render() {<br>let name = ""kitten"";<br>let button = // Missing code<br>return button;<br>}<br>}<br>```<br><br><ul><li>`<button onClick={(name) => this.hug(name)}>Hug Button</button>;`</li><li>`<button onClick={this.hug(e, name)}>Hug Button</button>;`</li><li>`<button onClick={(e) => hug(name, e)}>Hug Button</button>;`</li><li>`<button onClick={(e) => this.hug(name, e)}>Hug Button</button>;`</li></ul>","`<button onClick={(e) => this.hug(name, e)}>Hug Button</button>;`<br><br>**Explanation:**<br>This question test knowledge of react class components. You need to use `this` in order to call methods declared inside class components.<br>"
"<b> What syntax do you use to create a component in React?</b><br><ul><li>a generator</li><li>a function or a class</li><li>a service worker</li><li>a tag`React Components are like functions that return HTML elements. Components are independent and reusable bits of code. They serve the same purpose as JavaScript functions, but work in isolation and return HTML. Components come in two types, Class components and Function components.` [(Source)](https://reactjs.org/docs/components-and-props.html)<br></li></ul>",a function or a class
<b> You want to disable a button so that it does not emit any events onClick. Which prop do you use to acomplish this?</b><br><ul><li>onBlur</li><li>onPress</li><li>defaultValue</li><li>disabled</li></ul>,disabled
"<b> In this function, which is the best way to describe the Dish component?</b><br><br>```<br>function Dish() {<br>return (<br><><br><Ingredient /><br><Ingredient /><br></><br>);<br>}<br>```<br><br><ul><li>child component</li><li>parent component</li><li>nested component</li><li>sibling component</li></ul>",parent component
<b> When does the componentDidMount function fire?</b><br><ul><li>right after the component is added to the DOM</li><li>before the component is added to the DOM</li><li>right after the component is updated</li><li>right after an API call</li></ul>,right after the component is added to the DOM
<b> What might you use webpack for?</b><br><ul><li>to fetch remote dependencies used by your app</li><li>to split your app into smaller chunks that can be more easily loaded by the browser</li><li>to format your code so that it is more readable</li><li>to ensure your app is not vulnerable to code injection</li></ul>,to split your app into smaller chunks that can be more easily loaded by the browser
"<b> When using the React Developer Tools Chrome extension, what does it mean if the React icon is red?</b><br><ul><li>You are using the development build of React.</li><li>You are using the production build of React.</li><li>You are using webpack.</li><li>You are using Create React App.</li></ul>",You are using the development build of React.<br><br>[Reference](https://teamtreehouse.com/community/hey-why-the-logo-of-react-developer-tools-appears-in-red)<br>
"<b> How would you modify the constructor to fix this erroe: ""ReferenceError: Must call super constructor in derived class before accessing 'this'...""?</b><br><br>```<br>class TransIsBeautiful extends React.Component {<br>constructor(props){<br>// Missing line<br>console.log(this) ;<br>}<br>...<br>}<br>```<br><br><ul><li>render(props);</li><li>super(props);</li><li>super(this);</li><li>this.super();</li></ul>",super(props);
<b> Which language can you not use with React?</b><br><ul><li>Swift.</li><li>JSX.</li><li>Javascipt.</li><li>TypeScript.</li></ul>,Swift.
<b> This code is part of an app that collects Pokemon. How would you print the list of the ones collected so far?</b><br><br>```javascript<br>constructor(props) {<br>super(props);<br>this.state = {<br>pokeDex: []<br>};<br>}<br>```<br><br><ul><li>console.log(props.pokeDex);</li><li>console.log(this.props.pokeDex);</li><li>console.log(pokeDex);</li><li>console.log(this.state.pokeDex);</li></ul>,console.log(this.state.pokeDex);<br><br>[Reference](https://www.digitalocean.com/community/tutorials/how-to-manage-state-on-react-class-components#step-3-setting-state-from-a-static-value)<br>
"<b> What would be the result of running this code?</b><br><br>```javascript<br>function add(x = 1, y = 2) {<br>return x + y;<br>}<br>add();<br>```<br><br><ul><li>null</li><li>3</li><li>0</li><li>undefined![image](https://user-images.githubusercontent.com/62549240/160531605-bf8790d5-5eb9-4291-a9bd-4232f2fd7b6e.png)<br></li></ul>",3
<b> Why might you use a React.ref?</b><br><ul><li>to refer to another JS file</li><li>to bind the function</li><li>to call a function</li><li>to directly access the DOM node</li></ul>,to directly access the DOM node<br><br>[Reference](https://reactjs.org/docs/refs-and-the-dom.html)<br>
