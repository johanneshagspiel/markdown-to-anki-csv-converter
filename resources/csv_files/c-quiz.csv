"<b> Which Code sample will eventually cause the computer to run out of memory?</b><br><br>- [x]<br>```c<br>while(1)<br>{<br>char *smallString = (char *) malloc(10);<br>}<br>```<br>- [ ]<br>```c<br>long long number = 1;<br>while(1)<br>number *= 2;<br>```<br>- [ ]<br>```c<br>while(1)<br>{<br>char hugeString[1000000L];<br>memset(hugeString, 0, 1000000L);<br>}<br>```<br>- [ ]<br>```c<br>while(1)<br>{<br>long *bigArray = (long *) malloc(sizeof(long) * 1000);<br>memset(bigArray, 1000000, 1000);<br>free(bigArray);<br>}<br>```<br><br><ul></ul>",No answer found
"<b> What will this code print on the screen?</b><br><br>```c<br>int f1 (int a, int b)<br>{<br>if (a > b)<br>{<br>printf(""A is greater than B\n"");<br>return 1;<br>}<br>else<br>{<br>printf(""B is greater than A"");<br>return 0;<br>}<br>}<br>main()<br>{<br>if (f1(20,10) || f1(10,20))<br>printf(""C is fun!\n"");<br>}<br>```<br>- [x]<br>```<br>A is greater then B<br>C is fun!<br>```<br>- [ ]<br>```<br>A is greater then B<br>B is greater then A<br>C is fun!<br>```<br>- [ ]<br>```<br>A is greater then B<br>B is greater then A<br>```<br><br><ul><li>Nothing is printed on Screen</li></ul>",No answer found
<b> What is the name for calling a function inside the same function?</b><br><ul><li>recursion</li><li>subfunction</li><li>inner call</li><li>infinite loop</li></ul>,recursion
<b> What does the declaration of variable c</b><br><br>```c<br>main(){<br>char c1 ='a';<br>char c2 = c1+10;<br>}<br>```<br><br><ul><li>character arithmetic</li><li>undefined assignment</li><li>type conversion</li><li>invalid declaration</li></ul>,character arithmetic
"<b> A pointer to void named vptr, has been set to point to a floating point variable named g. What is the valid way to dereference vptr to assign its pointed value to a float variable named f later in this program?</b><br><br>```c<br>float g;<br>void *vptr=&g;<br>```<br><br><ul><li>f = _(float _)vptr;</li><li>f = (float \*)vptr;</li><li>f = \*(float \*)vptr;</li><li>f = \*(float)vptr;</li></ul>",f = \*(float \*)vptr;
<b> What is this declaration an example of?</b><br><br>```c<br>struct s {<br>int i;<br>struct s *s1;<br>struct s *s2;<br>};<br>```<br><br><ul><li>a node</li><li>a linked list</li><li>a stack</li><li>a binary tree</li></ul>,a node
"<b> Header files are listed using the preprocessing directive #include, and can have one of the following formats: #include &lt;fileA&gt; or #include ""fileB"". What is the difference between these two formats?</b><br><ul><li>The preprocessor will try to locate fileA in same directory as the source file, and the fileB in a predetermined directory path.</li><li>The preprocessor will try to locate fileA in the fixed system directory. It will try to locate fileB in the directory path designated by the -I option added to the command line while compiling the source code.</li><li>The file using the fileA syntax must be system files, of unlimited number; fileB must be a user file at a maximun of one per source file.</li><li>The preprocessor will try to locate fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path.</li></ul>",The preprocessor will try to locate fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path.
"<b> Using a for loop, how could you write a C code to count down from </b><br><br>- [ ]<br>```c<br>for (int i = 0; i>=0, i--){<br>printf(""%d\n"", i);<br>}//end of loop<br>```<br>- [ ]<br>```c<br>int i;<br>for (i=1; i<=10; i++){<br>printf(""%d"", i);<br>}<br>```<br>- [ ]<br>```c<br>int i = 10;<br>while (i>0){<br>printf(""%d\n"", i);<br>i--;<br>}<br>```<br>- [x]<br>```c<br>int i;<br>for (i= 10; i>0; i--){<br>printf(""%d\n"", i);<br>}// end of loop<br>```<br><br><ul></ul>",No answer found
<b> What is not one of the reserved words in standard C?</b><br><ul><li>volatile</li><li>typeof</li><li>register</li><li>typedef</li></ul>,typeof<br><br>[Reference](https://www.ibm.com/docs/en/adfz/developer-for-zos/14.2.0?topic=programs-c-reserved-keywords)<br>
"<b> What does the program shown below return?</b><br><br>```c<br>int main(){<br>int a=1, b=2, c=3, d=4;<br>int x = a;<br>if (a>b)<br>if (b<c) x=b;<br>else x=c;<br>return(x);<br>}<br>```<br><br><ul><li>1</li><li>3</li><li>2</li><li>0</li></ul>",1
"<b> Using the Union declaration below, how many bytes of memory space will the data of this type occupy?</b><br><br>```c<br>union Cars {<br>char make[20];<br>char model[30];<br>short year;<br>} car;<br>```<br><br><ul><li>32</li><li>54</li><li>30</li><li>52</li></ul>",30
"<b> In this code sample, what is not a problem for C compiler?</b><br><br>```c<br>main(){<br>constant int PI = 3.14;<br>printf(""%f\n"", pi);<br>}<br>```<br><br><ul><li>The value of PI needs to be set to 3.141593, not 3.14</li><li>The declaration of PI needs to say const, not constant.</li><li>The data type of PI needs to be float not int.</li><li>The printf statement needs to use PI, not pi.</li></ul>","The value of PI needs to be set to 3.141593, not 3.14"
<b> Which is the smallest program to compile and run without errors?</b><br><ul><li>main()</li><li>int main() {return 0;}</li><li>main() { }</li><li>main() { ; }</li></ul>,main() { }<br><br>[Reference](https://www.beningo.com/150-the-wolrds-shortest-c-program/)<br>
<b> What is optional in a function declaration?</b><br><ul><li>data type of parameters</li><li>return type of function</li><li>parameter names</li><li>number of parameters</li></ul>,parameter names
"<b> C treats all devices, such as the display and the keyboard, as files. Which file opens automatically when a program executes?</b><br><ul><li>stdout</li><li>stdio.h</li><li>default.h</li><li>string.h</li></ul>",stdout
<b> In which segment does dynamic memory allocation takes place?</b><br><ul><li>BSS Segment</li><li>stack</li><li>heap</li><li>data segment</li></ul>,"heap<br><br>[Reference](http://www.it.uc3m.es/pbasanta/asng/course_notes/dynamic_memory_heap_en.html#:~:text=The%20dynamic%20memory%20that%20is,reads%20a%20set%20of%20words.)<br>"
<b> Which function do you use to deallocate memory?</b><br><ul><li>dalloc()</li><li>dealloc()</li><li>release()</li><li>free()</li></ul>,free()<br><br>[Reference](https://www.tutorialspoint.com/c_standard_library/c_function_free.htm)<br>
<b> In C language what are the basic building blocks that are constructed together to write a program?</b><br><ul><li>keywords</li><li>identifiers</li><li>tokens</li><li>functions</li></ul>,tokens
<b> When is memory for a variable allocated?</b><br><ul><li>during the assigment of the variable</li><li>during the initialization of the variable</li><li>during the declaration of the variable</li><li>during the definition of the variable</li></ul>,during the declaration of the variable
<b> C uses the call by value method to pass arguments to functions. How can you invoke the call by reference method?</b><br><ul><li>by using pointers</li><li>by declaring functions separately from defining them</li><li>by using recursive functions</li><li>by using global variables</li></ul>,by using pointers
<b> A union allows you to store different `___` in the same `___`.</b><br><ul><li>Objects; Structure</li><li>Variables; Declaration</li><li>Data types; Memory space</li><li>Arrays; Header file</li></ul>,Data types; Memory space
"<b> What is the output of this program?</b><br><br>```c<br>main() {<br>char c1='a' , c2='A';<br>int i=c2-c1;<br>printf(""%d"", i);<br>}<br>```<br><br><ul><li>32</li><li>Runtime error</li><li>-32</li><li>0</li></ul>",-32
<b> What is the difference between scanf() and sscanf() functions?</b><br><ul><li>The scanf() function reads data formatted as a string; The sscanf() function reads string input from the screen.</li><li>The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.</li><li>The scanf() function reads string data from the keyboard; The sscanf() function reads string data from a string.</li><li>The scanf() function reads formatted data from a file; The sscanf() function reads input from a selected string</li></ul>,The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.
"<b> What is not a valid command with this declaration?</b><br><br>```c<br>char *string[20] = { ""one"", ""two"", ""three""};<br>```<br><br><ul><li>`printf(""%c"", string[1][2]);`</li><li>`printf(""%s"", string[1][2]);`</li><li>`printf(""%s"", string[1]);`</li><li>`printf(string[1]);`</li></ul>","`printf(""%s"", string[1][2]);`"
<b> What is the expression player->name equivalent to?</b><br><ul><li>`player.name`</li><li>`(\*player).name`</li><li>`\*player.name`</li><li>`player.\*name`</li></ul>,`(\*player).name`
<b> Which program will compile and run without errors?</b><br><br>- [ ]<br>```c<br>main() {<br>for(i=0; i<10; i++) ;<br>}<br>```<br>- [x]<br>```c<br>main() {<br>int i=0;<br>for(; i<10; i++) ;<br>}<br>```<br>- [ ]<br>```c<br>main() {<br>int i;<br>for(i=0; i<j; i++) ;<br>}<br>```<br>- [ ]<br>```c<br>main() {<br>int i;<br>for (i= 10; i<10; i++)<br>}<br>```<br><br><ul></ul>,No answer found
"<b> What does this function call return?</b><br><br>```c<br>1 main() { float x = f1(10, 5); }<br>2 float f1(int a, int b) { return (a/b); }<br>```<br><br><ul><li>2</li><li>2.000000</li><li>a runtime error</li><li>a compiler error</li></ul>",a compiler error
<b> What does this program create?</b><br><br>```c<br>#include <stdio.h><br>int main() {<br>int *p = NULL;<br>return 0;<br>}<br>```<br><br><ul><li>a runtime error</li><li>a NULL pointer</li><li>a compile error</li><li>a void pointer</li></ul>,a NULL pointer
<b> What is an alternative way to write the expression (\*x).y?</b><br><ul><li>There is no equivalent.</li><li>x->y</li><li>\*x->y</li><li>y->x</li></ul>,x->y
<b> Compile time errors are static errors that can be found where in the code?</b><br><ul><li>in declarations and definitions</li><li>in functions and expressions</li><li>in syntax and semantics</li><li>in objects and statements</li></ul>,in declarations and definitions
<b> File input and output (I/O) in C is heavily based on the way it is done `___`?</b><br><ul><li>in Unix</li><li>in C++</li><li>in C#</li><li>in DOS</li></ul>,in Unix
"<b> What does the strcmp(str</b><br><ul><li>0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2</li><li>true (1) if str1 and str2 are the same, false (0) if str1 and str2 are not the same</li><li>true (1) if str1 and str2 are the same, NULL if str1 and str2 are not the same</li><li>0 if str1 and str2 are the same, a negative number if str2 is less than str1, a positive number if str2 is greater than str1</li></ul>","0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2"
"<b> What is the output of this program?</b><br><br>```c<br>int a=10, b=20;<br>int f1(a) { return(a*b); }<br>main() {<br>printf(""%d"", f1(5));<br>}<br>```<br><br><ul><li>100</li><li>200</li><li>5</li><li>50</li></ul>",100
"<b> Which is _not_ a correct way to declare a string variable?</b><br><ul><li>`char *string = ""Hello World"";`</li><li>`char string = ""Hello World"";`</li><li>`char string[20] = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};`</li><li>`char string[] = ""Hello World"";`</li></ul>","`char string = ""Hello World"";`"
"<b> Which choice is an include guard for the header file mylib.h?</b><br><br>- [ ]<br>```c<br>#ifdef MYLIB_H<br>#undef MYLIB_H<br>// mylib.h content<br>#endif /* MYLIB_H */<br>```<br>- [x]<br>```c<br>#ifndef MYLIB_H<br>#define MYLIB_H<br>// mylib.h content<br>#endif /* MYLIB_H */<br>```<br>- [ ]<br>```c<br>#define MYLIB_H<br>#include ""mylib.h""<br>#undef MYLIB_H<br>```<br>- [ ]<br>```c<br>#ifdef MYLIB_H<br>#define MYLIB_H<br>// mylib.h content<br>#endif /* MYLIB_H */<br>```<br><br><ul></ul>",No answer found
<b> How many times does the code inside the while loop get executed in this program?</b><br><br>```c<br>main(){<br>int x=1;<br>while(x++<100){<br>x*=x;<br>if(x<10) continue;<br>if(x>50) break<br>}<br>}<br>```<br><br><ul><li>100</li><li>3</li><li>5</li><li>50</li></ul>,3
<b> File input and output (I/O) in C is done through what?</b><br><ul><li>syntax-driven components</li><li>native interfaces</li><li>system objects</li><li>function calls</li></ul>,function calls
<b> Directives are translated by the?</b><br><ul><li>Pre-processor</li><li>Compiler</li><li>Linker</li><li>Editor</li></ul>,Pre-processor
"<b> The main loop structures in C programming are the for loop, the while loop, and which other loop?</b><br><ul><li>do...while</li><li>for...in</li><li>repeat...until</li><li>do...until</li></ul>",do...while
"<b> By default, C Functions are what type of functions?</b><br><ul><li>global</li><li>static</li><li>library</li><li>system</li></ul>",library
<b> You have written a function that you want to include as a member of structure a. How is such as structure member defiened?</b><br><br>- [x]<br>```c<br>struct a {<br>void *f1;<br>};<br>```<br>- [ ]<br>```c<br>struct a {<br>void (*f1)();<br>};<br>```<br>- [ ]<br>```c<br>struct a {<br>*(void *f1)();<br>};<br>```<br>- [ ]<br>```c<br>struct a {<br>void *f1();<br>};<br>```<br><br><ul></ul>,No answer found
"<b> A Stack data structure allows all data operations at one end only, making it what kind of an implementation?</b><br><ul><li>FIFO</li><li>LIFO</li><li>LILO</li><li>LOLI</li></ul>",LIFO
"<b> What does this program display?</b><br><br>```c<br>main(){<br>char *p = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ"";<br>int i;<br>for (i=0;i<5;i++) *p++; *p++;<br>printf(""%c"",*p++);<br>}<br>```<br><br><ul><li>K</li><li>M</li><li>H</li><li>G</li></ul>",G
<b> Describe the relationship between lvalue and rvalue.</b><br><ul><li>An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear only on the right-hand side.</li><li>An lvalue may appear only on the left-hand side of an assignment; an rvalue may appear on either the left-hand or right-hand side.</li><li>An lvaue and an rvalue may appear on either left-hand or right-hand side of an assignment.</li><li>An lvalue may appear on the left-hand or right-hand side of an assignment; an rvalue may appear only on the right-hand side.</li></ul>,An lvalue may appear on the left-hand or right-hand side of an assignment; an rvalue may appear only on the right-hand side.
<b> Which operator is used to access the address of a variable?</b><br><ul><li>`%`</li><li>`**`</li><li>`*`</li><li>`&`</li></ul>,`&`
"<b> Which add function properly returns the updated value of result?</b><br><br>- [x]<br>```c<br>void add (int a, int b, int *result)<br>{<br>*result = a+b;<br>}<br>main()<br>{<br>int a = 10;<br>int b = 20;<br>int result = 0;<br>add(a,b,&result);<br>}<br>```<br>- [ ]<br>```c<br>void add (int a, int b, int result)<br>{<br>result = a+b;<br>}<br>main()<br>{<br>int a = 10;<br>int b = 20;<br>int result = 0;<br>add(a,b,result);<br>}<br>```<br>- [ ]<br>```c<br>void add (int a, int b, int *result)<br>{<br>result = a+b;<br>}<br>main()<br>{<br>int a = 10;<br>int b = 20;<br>int result = 0;<br>add(a,b,result);<br>}<br>```<br>- [ ]<br>```c<br>void add (int *a, int *b, int *result)<br>{<br>result = a+b;<br>}<br>main()<br>{<br>int a = 10;<br>int b = 20;<br>int result = 0;<br>add(*a,*b,*result);<br>}<br>```<br><br><ul></ul>",No answer found
"<b> Consider the number of the Fibonacci series below </b><br><br>- [ ]<br>```c<br>void fibonacci(int a, int b)<br>{<br>int c = a+b;<br>if(a>100)<br>return;<br>printf(""%d"", a);<br>fibonacci(a,b);<br>}<br>int main()<br>{<br>fibonacci(0,1);<br>}<br>```<br>- [ ]<br>```c<br>void fibonacci(int a, int b)<br>{<br>int c = a+b;<br>if(a>100)<br>return;<br>printf(""%d"", b);<br>fibonacci(a,c);<br>}<br>int main()<br>{<br>fibonacci(0,1);<br>}<br>```<br>- [x]<br>```c<br>void fibonacci(int a, int b)<br>{<br>int c = a+b;<br>if(a>100)<br>return;<br>printf(""%d"", a);<br>fibonacci(b,c);<br>}<br>int main()<br>{<br>fibonacci(0,1);<br>}<br>```<br>- [ ]<br>```c<br>void fibonacci(int a, int b)<br>{<br>int c = a+b;<br>if(a>100)<br>return;<br>printf(""%d"", c);<br>fibonacci(b,c);<br>}<br>int main()<br>{<br>fibonacci(0,1);<br>}<br>```<br><br><ul></ul>",No answer found
<b> Which is _not_ a storage class specifier?</b><br><ul><li>`intern`</li><li>`extern`</li><li>`register`</li><li>`static`</li></ul>,`intern`<br><br>[Reference](https://en.cppreference.com/w/cpp/language/storage_duration)<br>
"<b> Which line of code, after execution, results in `i` having the value of </b><br><ul><li>`for(i=1; i<=1; i++);`</li><li>`for(i=1; i=10; i++);`</li><li>`for(i=1; i==10; i++);`</li><li>`for(i=10; i>=1; i--);`</li></ul>",`for(i=1; i==10; i++);`
"<b> What is the value of variable c at the end of this program?</b><br><br>```<br>1 main() {<br>2   int a, b, c;<br>3   a=10; b=50;<br>4   c=a * b % a;<br>5 }<br>```<br><br><ul><li>50</li><li>5</li><li>0</li><li>500</li></ul>",0
<b> What is _not_ one of the basic data types in C</b><br><ul><li>long double</li><li>unsigned char</li><li>array</li><li>float</li></ul>,array
"<b> What is the member access operator for a structure?</b><br><ul><li>,</li><li>[]</li><li>.</li><li>:</li></ul>",.
<b> What standard data type provides the smallest storage size and can be used in computations?</b><br><ul><li>char</li><li>float</li><li>int</li><li>short</li></ul>,char
<b> what does the ctype tolower() function do?</b><br><ul><li>It returns TRUE for lowercase letters of the alphabet.</li><li>It ensures that text output uses only ASCII values (0 through 127).</li><li>It returns FALSE for lowercase letters of the alphabet.</li><li>It converts an uppercase letter of the alphabet to lowercase.</li></ul>,It converts an uppercase letter of the alphabet to lowercase.
<b> Void pointer _vptr_ is assigned the address of float variable _g_. What is a valid way to dereference _vptr_ to assign its pointed value to a float variable named _f_ later in the program?</b><br><br>```c<br>float g;<br>void *vptr=&g;<br>```<br><br><ul><li>f=(float \*)vptr;</li><li>f=\*(float \*)vptr;</li><li>f=\*(float)vptr;</li><li>f=(float)\*vptr;</li></ul>,f=\*(float \*)vptr;
<b> The dynamic memory allocation functions are defined in which system header file ?</b><br><ul><li>stdio.h</li><li>stdlib.h</li><li>limits.h</li><li>stddef.h</li></ul>,stdlib.h
<b> A function is a set of **\_**.</b><br><ul><li>declarations</li><li>statements</li><li>variables</li><li>objects</li></ul>,statements
<b> How are static functions different from global functions?</b><br><ul><li>Static functions must be declared in advance of being defined.</li><li>Static functions must be declared is a separate header file.</li><li>Static functions always return the same value.</li><li>Static functions can be accessed only in the file where they are declared.</li></ul>,Static functions can be accessed only in the file where they are declared.
"<b> Which code example creates the string ""Hello Mars"" in storage buffer `hello`.</b><br><br>- [ ]<br>```c<br>char hello[25];<br>strcpy(hello, ""Hello "");<br>strcpy(hello, ""Mars"");<br>```<br>- [x]<br>```c<br>char hello[25];<br>char *p;<br>strcpy(hello, ""Hello World"");<br>p = hello;<br>p +=6;<br>strcpy(p, ""Mars"");<br>```<br>- [ ]<br>```c<br>char *hello;<br>strcpy(hello, ""Hello World"");<br>hello+=6;<br>strcpy(hello, ""Mars"");<br>```<br>- [ ]<br>```c<br>char hello[25];<br>strcpy(hello, ""Hello World"");<br>strcpy(*hello[6], ""Mars"");<br>```<br><br><ul></ul>",No answer found
"<b> If you use the fopen() function with the ""a"" mode, what happens if the named file doesn't exist?</b><br><br>[Reference](https://devdocs.io/c/memory)<br><br><ul><li>The file is created and opened for reading.</li><li>The file is created and opened for writing.</li><li>The fopen() function returns a NULL indicating that the operation has failed.</li><li>The file is created and opened for both writing and reading</li></ul>",No answer found
