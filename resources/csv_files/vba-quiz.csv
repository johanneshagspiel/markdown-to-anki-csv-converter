"<b> Which two sets of values are printed by this function and sub?</b><br><br>```vb<br>Function GetVitals(ID As Long, Age As Long, Optional Weight As Long) As String<br>GetVitals=""ID="" & ID &""Age="" & Age & ""Weight="" & Weight<br>End Function<br>Sub ShowVitals()<br>Dim ID As Long, Age As Long,Weight as Long<br>Debug.Print GetVitals(ID:=5,Age:=20)<br>Debug.Print GetVitals(ID:=6,Age:=25,Weight:=130)<br>End Sub<br>```<br><br><ul><li>:```<br>ID=5 Age = 20 Weight=<br>ID=6 Age = 25 Weight=130<br>```<br></li><li>:```<br>ID=5 Age = 20 Weight=0<br>ID=6 Age = 25 Weight=130<br>```<br></li><li>:```<br>ID=5 Age = 20 Weight=Null<br>ID=6 Age = 25 Weight=130<br>```<br></li><li>:```<br>ID=5 Age = 20<br>ID=6 Age = 25 Weight=130<br>```<br></li></ul>",:```<br>ID=5 Age = 20 Weight=0<br>ID=6 Age = 25 Weight=130<br>```<br>
"<b> This code shows the first statement of CalledSub. Which calling statement will work properly?</b><br><br>`Sub CalledSub(Surname, Age)`<br><br><ul><li>call Calledsub ""smith"",26</li><li>calledsub (surname=""smith"", Age = 26)</li><li>calledsub (Surname:=""Smith"", Age:=26)</li><li>calledsub ""smith"", 26</li></ul>","calledsub ""smith"", 26"
<b> What is the principal difference between a class and an object?</b><br><ul><li>There is no meaningful difference. The terms are used interchangeably.</li><li>A class declares an object's properties. An object completes the declaration by defining events and methods.</li><li>An object is a template for a class.</li><li>A class describes the design of an object. An object is an instance of that design.</li></ul>,A class describes the design of an object. An object is an instance of that design.
"<b> What value does the MsgBox statement display?</b><br><br>```vb<br>Sub MySub(VarA As Long, ParamArray VarB() As Variant)<br>MsgBox VarB(0)<br>End Sub<br>Sub ShowValue()<br>Call MySub(10, ""First arg"", 2, 3.1416)<br>End Sub<br>```<br><br><ul><li>2</li><li>10</li><li>First arg</li><li>3.1416</li></ul>",First arg
<b> What object is needed to put a userform module in a VBA project?</b><br><ul><li>associated standard code module</li><li>UserForm</li><li>associated class module</li><li>userForm class</li></ul>,No answer found
"<b> What is the output?</b><br><br>```vb<br>Sub UseSum()<br>Dim TestArray() As Integer, Total As Integer<br>ReDim TestArray(1)<br>TestArray(1) = 6<br>ReDim TestArray(2)<br>TestArray(2) = 3<br>Total = WorksheetFunction.Sum(TestArray)<br>End Sub<br>```<br><br><ul><li>3</li><li>0</li><li>9</li><li>6</li></ul>",3
<b> The Driver subroutine is declared by Sub Driver (Y). Which statement results in a compile error?</b><br><ul><li>Driver x</li><li>call Driver(x)</li><li>call Driver x</li><li>Driver (X)</li></ul>,No answer found
"<b> You have several variables to display on a user form, and there are too many variables to display at once. Which control best enables the user to see all the variables?</b><br><ul><li>Frame</li><li>multipage</li><li>TabStrip</li><li>ListBox</li></ul>",ListBox
"<b> Below is a function named SquareIt. Which version of the subroutine named Area results in a compile error?</b><br><br>```vb<br>Function SquareIt(ByRef Basis As Integer) As Long<br>SquareIt = Basis ^ 2<br>End Function<br>```<br><br><ul><li>sub Area()```vb<br>Dim Result As Long, Side As Integer<br>Side = 5<br>Result = Squarelt(Side)<br>End Sub<br>```<br></li><li>Sub Area()```vb<br>Dim Result As Long, Side<br>Side = 5<br>Result = SquareIt(Cint(Side))<br>End Sub<br>```<br></li></ul>",No answer found
<b> EmailAddress() is an array. It is declared by Dim EmailAddress(</b><br><ul><li>10 rows and 10 columns</li><li>10 rows and 1 column</li><li>10 rows and 0 columns</li><li>1 row and 10 columns</li></ul>,10 rows and 1 column
"<b> Which cell is selected if you run this code?</b><br><br>`Range(""E3:312"").Range(""B3"").Select`<br><br><ul><li>F5</li><li>F3</li><li>B3</li><li>E3</li></ul>",F3
<b> Which variable name is valid in VBA?</b><br><ul><li>`_MyVar`</li><li>`My_Var`</li><li>`My-Var`</li><li>`1MyVar`</li></ul>,"`My_Var`<br><br>[Reference link](https://docs.microsoft.com/en-us/office/vba/language/concepts/getting-started/visual-basic-naming-rules)<br>`Use the following rules when you name procedures, constants, variables, and arguments in a Visual Basic module: You must use a letter as the first character. You can't use a space, period (.), exclamation mark (!), or the characters @, &, $, # in the name. Name can't exceed 255 characters in length.`<br>"
<b> Which is a valid definition of a user-defined data type?</b><br><ul><li>:```vb<br>Type CBC<br>Name As String<br>Next As String<br>End Type<br>```<br></li><li>:```vb<br>Type CBC<br>Name As String<br>_Next As String<br>End Type<br>```<br></li><li>:```vb<br>Type CBC<br>Name As String<br>@Option As String<br>End Type<br>```<br></li><li>:```vb<br>Type CBC<br>Name As String<br>%For As String<br>End Type<br>```<br></li></ul>,:```vb<br>Type CBC<br>Name As String<br>Next As String<br>End Type<br>```<br>
"<b> What is one way to duplicate a user form from one project into a different project?</b><br><ul><li>:1. Save and close the project with the existing user form.<br>2. Click Insert > File.<br>3. Browse to the location of the existing project.<br>4. Right-click it and select the user-form you want to duplicate.<br></li><li>:1. Open the existing user form in Desing Mode.<br>2. Right-click the form and select Copy.<br>3. Switch to the other project.<br>4. Right-click Module and select Paste.<br></li><li>:1. In the Project Explorer, right-click the user form and select Copy.<br>2. Switch to the new project.<br>3. Right-click UserForms and select Paste.<br></li><li>:1. Open the existing user form in Design Mode.<br>2. Click File > Export File.<br>3. Switch to the other project.<br>4. Click File > Import File.<br></li></ul>",:1. Open the existing user form in Design Mode.<br>2. Click File > Export File.<br>3. Switch to the other project.<br>4. Click File > Import File.<br>
<b> The recording of a macro in Word is likely to be an incomplete record of the user's actions. Why?</b><br><ul><li>Word's Macro Recorder does not record actions initiated by keyboard shortcuts.</li><li>Word's Macro Recorder does not support Find & Replace edits.</li><li>Word's Macro Recorder does not record actions initiated by clicking a button on the Ribbon's Developer tab.</li><li>Word's Macro Recorder does not record actions that inlove selection of text by pointing with the mouse pointer.</li></ul>,Word's Macro Recorder does not record actions that inlove selection of text by pointing with the mouse pointer.
<b> Which statement should precede a subroutine's error handler?</b><br><ul><li>End</li><li>Return</li><li>Exit Sub</li><li>Stop</li></ul>,Exit Sub
"<b> How many values can MyArray hold?</b><br><br>```<br>Option Base 0<br>Sub BuildArray()<br>Dim MyArray(5) As Integer<br>```<br><br><ul><li>0</li><li>32,769</li><li>5</li><li>6</li></ul>",6
<b> Which statement is true?</b><br><ul><li>Set establishes a value in a class; Let returns a value from a class.</li><li>Let establishes a value in a class; Set returns a value from a class.</li><li>Let establishes a value in a class; Get returns a value from a class.</li><li>Get establishes a value in a class; Set returns a value from a class.</li></ul>,Let establishes a value in a class; Get returns a value from a class.
"<b> A declaration has scope, which has three levels. What are they?</b><br><ul><li>Module, Project and Automation</li><li>Procedure, Private Module and Public Module</li><li>Subroutine, Module and Project</li><li>Procedure, Project and Global</li></ul>","Procedure, Private Module and Public Module"
<b> There are two references that must be selected in the Visual Basic Editor in order for any Visual Basic code to run in Excel. What are these two references?</b><br><ul><li>MS Excel object library and MS Office object library</li><li>VBA and MS Office object library</li><li>VBA and Excel object library</li><li>MS Excel object library and OLE automation</li></ul>,VBA and Excel object library
<b> Which action will cause your project to reset its variables?</b><br><ul><li>Edit the list of arguments of the current routine while in debug mode.</li><li>Click End in a run-time error dialog.</li><li>Add an ActiveXcontrol to a worksheet.</li><li>all of these answers</li></ul>,Click End in a run-time error dialog.
<b> Which keyboard shortcut causes VBE to locate the declaration of a procedure?</b><br><ul><li>Shift+F3</li><li>Alt+F (Windows) or Option+F (Mac)</li><li>Shift+F2</li><li>Ctrl+F (Windows) or Command+F (Mac)</li></ul>,Shift+F2
"<b> When you define a new class of object, where do you assign a name to it?</b><br><ul><li>in the class module's name</li><li>in the class module's code</li><li>in a standard module's code</li><li>in a standard module's Properties</li></ul>",in a standard module's Properties
<b> How does a class module indicate that it uses a particular interface?</b><br><ul><li>The interface itself is part of the class module.</li><li>by means of the Interface keyword and the name of the interface</li><li>by means of the Implements keyword and the name of the interface</li><li>The name of the interface is passed as a parameter.</li></ul>,The name of the interface is passed as a parameter.
<b> What is needed for the contents of Module</b><br><ul><li>Set Option Global at the top of Module1</li><li>Declare module-level variables as Private</li><li>Set Module Level Scope at the top of Module1</li><li>Set Option Private Module at the top of Module1</li></ul>,Set Option Private Module at the top of Module1
"<b> When used with an array named MyArray, what is the preferred way to set beginning and ending values of a loop control variable?</b><br><ul><li>For i = 0 To UBound(MyArray,1)</li><li>For i = 1 To UBound(MyArray,1)</li><li>For i = LBound(MyArray,1) To UBound(MyArray,1)</li><li>It depends on whether Option Base 0 or Option Base 1 is in use.</li></ul>","For i = LBound(MyArray,1) To UBound(MyArray,1)"
<b> What is the value of Test</b><br><br>```vb<br>Enum TestEnum<br>Test1<br>Test2<br>Test3<br>End Enum<br>```<br><br><ul><li>0</li><li>1</li><li>3</li><li>2</li></ul>,2
<b> Which statement declares an array?</b><br><ul><li>Dim MyArray() As Integer</li><li>Dim MyArray() As Array</li><li>Dim MyArray As Integer</li><li>Dim MyArray As Array</li></ul>,Dim MyArray() As Integer<br><br>[reference](https://docs.microsoft.com/en-us/office/vba/language/concepts/getting-started/declaring-arrays)<br>
"<b> To use VBA code to maintain a different VBA project, you can make use of VBA's extensibility. What is needed to enable extensibility?</b><br><ul><li>Set Macro Security to Trust Access to the VBA Project Object Model</li><li>The project's workbook should be protected in the Ribbon's Review tab</li><li>Include a reference to Microsoft VBA Extensibility 5.3</li><li>Include a reference to Microsoft VBA Extensibility 5.3 and set Macro Security to Trust Access to the VBA Project Object Model</li></ul>",Include a reference to Microsoft VBA Extensibility 5.3
<b> How do you add a user form to a VBA project?</b><br><ul><li>:1. Select the project in the Project window of the Visual Basic Editor<br>2. Click the Design Mode button and select Insert Mode<br></li><li>:1. Select the project in the Project window of the Visual Basic Editor<br>2. Click the Toolbox button and select UserForm<br></li><li>:1. Select the project in the Project window of the Visual Basic Editor<br>2. Right-click the Run menu and select Customize<br></li><li>:1. Select the project in the Project window of the Visual Basic Editor<br>2. Click Insert > UserForm<br></li></ul>,:1. Select the project in the Project window of the Visual Basic Editor<br>2. Click Insert > UserForm<br>
"<b> Explicit variable declaration is required. MyVar is declared at both the module and the procedure level. What is the value of MyVar after first AAA() and then BBB() are run?</b><br><br>```vb<br>Dim MyVar As String<br>Sub AAA()<br>Dim MyVar As String<br>MyVar = ""Procedure AAA Scope""<br>End Sub<br>Sub BBB()<br>MyVar = ""Procedure BBB Scope""<br>End Sub<br>```<br><br><ul><li>MyVar equals ""Procedure AAA Scope""</li><li>ISNULL(MyVar) is TRUE</li><li>MyVar equals ""Procedure BBB Scope""</li><li>MyVar is NULL</li></ul>","MyVar equals ""Procedure BBB Scope"""
<b> Which code block from class modules returns a compile error?</b><br><ul><li>:```vb<br>Public Property Get HDL() As Double<br>HDL = pHDL<br>End Property<br>Public Property Let HDL(Value As Double)<br>pHDL = Value<br>End Property<br>```<br></li><li>:```vb<br>Property Get HDL() As Double<br>HDL = Value<br>End Property<br>Property Let HDL(Value As Double)<br>pHDL = Value<br>End Property<br>```<br></li><li>:```vb<br>Public Property Get HDL() As Double<br>HDL = Value<br>End Property<br>Public Property Let HDL(Value As Double)<br>pHDL = Value<br>End Property<br>```<br></li><li>:```vb<br>Public Property Get HDL() As Single<br>HDL = pHDL<br>End Property<br>Public Property Let HDL(Value As Double)<br>pHDL = Value<br>End Property<br>```<br></li></ul>,:```vb<br>Public Property Get HDL() As Single<br>HDL = pHDL<br>End Property<br>Public Property Let HDL(Value As Double)<br>pHDL = Value<br>End Property<br>```<br>
"<b> If VBA code declares FileCount as a constant rather than a variable, the code tends to run faster. Why is this?</b><br><ul><li>The scope of constants is limited to the procedure that declares them</li><li>Constants are declared at compile time, but variables are declared at run time</li><li>Once declared in a project, the value of a constant cannot be changed. There is no need to look up the current value of FileCount when it is a constant.</li><li>The Const declaraton specifies the most efficient type given the constant's value</li></ul>",The Const declaraton specifies the most efficient type given the constant's value
<b> A VBA project must declare four classes. How many class modules are needed?</b><br><ul><li>two (one for the properties and one for the methods)</li><li>one (each class is declared in the same module)</li><li>four (one for each class)</li><li>as many as are required by the variable types that the objects return</li></ul>,as many as are required by the variable types that the objects return
"<b> What does this code display?</b><br><br>```vb<br>Sub MakeErrors()<br>Dim Y As Variant, Z As Variant<br>On Error Resume Next<br>Y = 1 / 0<br>MsgBox ""Y = "" & Y<br>On Error GoTo 0<br>Z - (0 - 3) ^ 0.5<br>MsgBox ""Z = "" & Z<br>End Sub<br>```<br><br><ul><li>an error message</li><li>Y and Z</li><li>Z = in a message box and then a subsequent error message</li><li>Y = in a message box and then a subsequent error message</li></ul>",Z = in a message box and then a subsequent error message
"<b> The VBA code block shown in the following four options runs when UserForm</b><br><ul><li>:```vb<br>Private Sub CommandButton1_Click()<br>If FoundErrors(Me) Then _<br>Me.Show<br>End Sub<br>```<br></li><li>:```vb<br>Private Sub CommandButton1_Click()<br>If Not FoundErrors(UserForm1) Then _<br>Unload UserForm1<br>End Sub<br>```<br></li><li>:```vb<br>Private Sub CommandButton1_Click()<br>Me.Hide<br>Do While FoundErrors(Me)<br>Me.Show<br>Loop<br>End Sub<br>```<br></li><li>:```vb<br>Private Sub CommandButton1_Click()<br>Do While FoundErrors(UserForm1)<br>UserForm1.show<br>Loop<br>End Sub<br>```<br>> The first requirement is to make UserForm1 loaded but not visible, therefore we need Me.Hide, **Me** in here referring to UserForm1<br></li></ul>",:```vb<br>Private Sub CommandButton1_Click()<br>Me.Hide<br>Do While FoundErrors(Me)<br>Me.Show<br>Loop<br>End Sub<br>```<br>
"<b> Which is the correct way to structure a With block?</b><br><ul><li>:```vb<br>With Selection<br>&TypeText Text:=""8/24/2019""<br>&TypeParagraph<br>&TypeText Text:=""1161 Alamosa Drive""<br>End With<br>```<br></li><li>:```vb<br>With Selection<br>.TypeText Text:=""8/24/2019""<br>.TypeParagraph<br>.TypeText Text:=""1161 Alamosa Drive""<br>End With<br>```<br></li><li>:```vb<br>With Selection<br>TypeText Text:=""8/24/2019""<br>TypeParagraph<br>TypeText Text:=""1161 Alamosa Drive""<br>End With<br>```<br></li><li>:```vb<br>With Selection:<br>&TypeText Text:=""8/24/2019""<br>&TypeParagraph<br>&TypeText Text:=""1161 Alamosa Drive""<br>End With<br>```<br></li></ul>",":```vb<br>With Selection<br>.TypeText Text:=""8/24/2019""<br>.TypeParagraph<br>.TypeText Text:=""1161 Alamosa Drive""<br>End With<br>```<br><br><br>[reference](https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/with-statement)<br>"
"<b> Why does this code generate a ""Subscript out of range"" error?</b><br><br>```vb<br>Sub Example()<br>Dim MyArr() As Variant<br>ReDim MyArr(3, 4)<br>'some code<br>ReDim Preserve MyArr(4, 4)<br>End Sub<br>```<br><br><ul><li>Arrays cannot be resized more than once.</li><li>MyArr was originally declared with three ""rows"".</li><li>You can resize only the last dimension of an array when you specify `ReDim Preserve`.</li><li>The correct syntax is `ReDim Preserve MyArr(0 To 4, 0 To 4)`.</li></ul>",No answer found
"<b> Which subroutine declaration does not cause a compile error?</b><br><ul><li>`Sub Called(Salary As Long, ParamArray Vals() As Variant)`</li><li>`Sub Called(ParamArray Vals() As Variant, Salary As Long)`</li><li>`Sub Called(Optional Salary As Long, ParamArray Vals() As Variant)`</li><li>`Sub Called(Salary As Long, ParamArray Vals() As String)`</li></ul>",No answer found
"<b> How can a user enter data on a worksheet or document, or switch windows, while UserForm</b><br><ul><li>Show the form with this statement: `UserForm1.Show vbModal`</li><li>Include this statement in the code: `UserForm1.Hwnd = False.`</li><li>Set the user from's `SpecialEffect` property to `frmShowModal`</li><li>Set the user from's `ShowModal` property to False.</li></ul>",No answer found
<b> SubA passes MyVar to SubB. How can you ensure that MyVar has its original value when control returns to SubA?</b><br><ul><li>Declare SubB as Sub SubB(ByRef MyVar).</li><li>Declare SubB as Sub SubB(MyVar).</li><li>Declare SubB as Sub SubB(Static MyVar).</li><li>Declare SubB as Sub SubB(ByVal MyVar).</li></ul>,Declare SubB as Sub SubB(ByVal MyVar).
"<b> Which procedure declaration is syntactically correct?</b><br><ul><li>:```vb<br>Sub MySub(VarA As String, Optional VarB _<br>As Variant, Optional VarC As Long)<br>```<br></li><li>:```vb<br>Sub MySub(VarA As String, Optional VarB _<br>As Variant, VarC As Long)<br>```<br></li><li>:```vb<br>Sub MySub(Optional VarA As String, Optional VarB _<br>As Variant, VarC as Long)<br>```<br></li><li>:```vb<br>Sub MySub(OPtional VarA As String, VarB _<br>As Variant, Optional VarC as Long)<br>```<br></li></ul>",No answer found
<b> What are the two principal kinds of procedure in VBA?</b><br><ul><li>Function and Event</li><li>Function and Scope</li><li>Subroutine and Event</li><li>Subroutine and Function</li></ul>,Function and Event
"<b> Which code block compiles without error?</b><br><ul><li>`Sub Decs() Dim MyFixed As String * 0 MyFixed = ""A"" MsgBox MyFixed End Sub`</li><li>`Sub Decs() Dim MyInt% * 1 MyInt = 7 MsgBox MyInt End Sub`</li><li>`Sub Decs() Dim MyInt% As Integer * 1 MyInt = 5 MsgBox MyInt End Sub`</li><li>`Sub Decs() Dim MyInt, MyNum As Integer MyInt = ""A"" MsgBox MyInt End Sub`</li></ul>",No answer found
<b> What is used in the Immediate window to display the current value of the variable CountValues?</b><br><ul><li>`= CountValues= CountValues`</li><li>`| CountValues| CountValues`</li><li>`: CountValues: CountValues`</li><li>`? CountValues? CountValues`</li></ul>,`? CountValues? CountValues`
<b> At which level can you declare a variable in this way: Private TopSecret As String?</b><br><ul><li>function</li><li>module</li><li>subroutine</li><li>procedure</li></ul>,No answer found
"<b> How can a user enter data on a worksheet or document, or switch windows, while UserForm</b><br><ul><li>Show the form with this statement: UserForm1.Show vbModal.</li><li>Set the user form's SpecialEffect property to frmShowModal.</li><li>Include this statement in the code: `UserForm1.Hwnd = False.`</li><li>Set the user form's ShowModal property to False.</li></ul>",Set the user form's ShowModal property to False.
<b> SubA passes MyVar to SubB. How can you ensure that MyVar has its original value when control returns to SubA?</b><br><ul><li>Declare SubB as Sub SubB(Static MyVar).</li><li>Declare SubB as Sub SubB(ByVal MyVar).</li><li>Declare SubB as Sub SubB(MyVar).</li><li>Declare SubB as Sub SubB(ByRef MyVar).</li></ul>,No answer found
"<b> Arrays cannot be resized more than once.</b><br><br>```vb<br>Sub Example() Dim MyArr() As Variant ReDim MyArr(3, 4) 'some code ReDim Preserve MyArr(4, 4)<br>End Sub Sub Example() Dim MyArr() As Variant ReDim MyArr(3, 4) 'some code ReDim Preserve MyArr(4, 4) End Sub<br>```<br><br><ul><li>The correct syntax is ReDim Preserve MyArr(0 To 4, 0 To 4).</li><li>You can resize only the last dimension of an array when you specify ReDim Preserve.</li><li>MyArr was originally declared with three ""rows.""</li><li>Declare SubB as Sub SubB(ByRef MyVar).</li></ul>",No answer found
"<b> Which block of code ends with the variable i equal to </b><br><ul><li>:```vb<br>Do<br>X = X + 1<br>i = i + 1<br>Loop Until i < 5<br>End Sub<br>```<br></li><li>:```vb<br>Sub Loopi()<br>Dim X As Integer, i As Integer<br>For i = 1 To 5<br>X = X + 1<br>Next I<br>End Sub<br>```<br></li><li>:```vb<br>Sub Loopi()<br>Dim X As Integer, i As Integer<br>Do Until i < 5<br>X = X + 1<br>i = i + 1<br>Loop<br>End Sub<br>```<br></li><li>:```vb<br>Sub Loopi()<br>Dim X As Integer, i As Integer<br>Do<br>X = X + 1<br>i = i + 1<br>Loop While i < 5<br>End Sub<br>```<br></li></ul>",":```vb<br>Sub Loopi()<br>Dim X As Integer, i As Integer<br>Do Until i < 5<br>X = X + 1<br>i = i + 1<br>Loop<br>End Sub<br>```<br>"
<b> How does a class module indicate that it uses a particular interface?</b><br><ul><li>by means of the _Implemets_ keyword and the name of interface.</li><li>bymeans of the _Interface_ keyword and the name of the interface.</li><li>The name of the interface is passed as a parameter.</li><li>The interface itself is part of the class module.</li></ul>,by means of the _Implemets_ keyword and the name of interface.
<b> Which part of the VBE can help you explore VBA syntax?</b><br><ul><li>Locals windows</li><li>object browser</li><li>project explorer</li><li>optional dialog</li></ul>,project explorer
"<b> This code is trying to establish a new collection consisting of employee names and numbers. Assoc is a class. What statement is missing from the code?</b><br><br>```vb<br>Dim Associates As Collection, Assoc As CAssoc, i As Byte<br>For i = 1 To 200<br>Set Assoc = New CAssoc<br>Assoc.Name = Cells(i,1)<br>Assoc.Number = Cells(i,2)<br>Associates.Add Assoc<br>Next i<br>```<br><br><ul><li>`Set Associates = New Collection`</li><li>`Set Associates = Collection`</li><li>`Redim(Associates(Associates.Count+1))`</li><li>`Redim(Associates _ (Unbound(Associates)+1))`</li></ul>",`Set Associates = New Collection`
<b> What is the standard term for a variable or value that is passed from one subroutine or function to another?</b><br><ul><li>reference</li><li>element</li><li>argument</li><li>attribute</li></ul>,argument
<b> What is the standard term for a variable or value that is passed from one subroutine or function to another?</b><br><ul><li>reference</li><li>element</li><li>argument</li><li>attribute</li></ul>,argument
<b> Where is the event procedure named Worksheet_Change found?</b><br><ul><li>in any standard code module</li><li>in the worksheet's object module</li><li>in the Worksheet_Change class module</li><li>in the workbook's code module</li></ul>,in the workbook's code module
"<b> You are building an event procedure for a worksheet, and you edit the argument list in the event procedure's Sub statement. What happens when the event procedure runs?</b><br><ul><li>There's no difference compared to the results of a standard procedure.</li><li>The results are unpredictable.</li><li>The procedure won't compile.</li><li>The procedure throws a run-time error.</li></ul>",The procedure won't compile.
"<b> Based on this code, which procedure calls the subroutine SumCosts correctly?</b><br><br>```vb<br>Sub Sumosts(AcctName As String, Amount As Long)<br>Range(""A1"") = AcctName<br>End Sub<br>```<br><br><ul><li>call SumCosts ""Totalcosts"", 3</li><li>SumCosts ""Totalcosts"", 3</li><li>SumCosts(""Totalcosts"", 3)</li><li>Call SumCosts</li></ul>","SumCosts(""Totalcosts"", 3)<br><br>[Source](https://learn.microsoft.com/en-us/office/vba/language/concepts/getting-started/calling-sub-and-function-procedures)<br>"
"<b> You want to declare an object that describes cars, so that your VBA code can apply tests such as the following. What keyword do you use to declare Cars?</b><br><br>```vb<br>If Cars(1).Make=""Ford"" And Cars (1).MPG > 20<br>Then Cars(1).Selected = True<br>```<br><br><ul><li>Dataframe</li><li>Type</li><li>object</li><li>Variant</li></ul>",Type
"<b> What is the purpose of the .Range(""A</b><br><br>```vb<br>ActiveCell.Offset(3,4).Range(""A1:E5"").Select<br>```<br><br><ul><li>If specifies the range that is to be selected after the offset is found</li><li>it specifies the range of cells in which the contents of the offset are to be written</li><li>It provides Resize information - in this case, the offset returns a reference of five rows and five columns</li><li>It specifies the range of cells at which the offset is to be based</li></ul>",it specifies the range of cells in which the contents of the offset are to be written
