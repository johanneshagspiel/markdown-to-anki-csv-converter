<b> How does a matrix differ from a data frame?</b><br><ul><li>A matrix may contain numeric values only.</li><li>A matrix must not be singular.</li><li>A data frame may contain variables that have different modes.</li><li>A data frame may contain variables of different lengths.</li></ul>,A data frame may contain variables that have different modes.
"<b> What value does this statement return?</b><br><br>`unclass(as.Date(""1971-01-01""))`<br><br><ul><li>1</li><li>365</li><li>4</li><li>12</li></ul>",365
<b> What do you use to take an object such as a data frame out of the workspace?</b><br><ul><li>remove()</li><li>erase()</li><li>detach()</li><li>delete()</li></ul>,remove()
"<b> Review the following code. What is the result of line </b><br><br>```<br>xvect<-c(1,2,3)<br>xvect[2] <- ""2""<br>xvect<br>```<br><br><ul><li>[1] 1 2 3</li><li>[1] ""1"" 2 ""3""</li><li>[1] ""1"" ""2"" ""3""</li><li>[1] 7 9</li></ul>","[1] ""1"" ""2"" ""3"""
<b> The variable height is a numeric vector in the code below. Which statement returns the value </b><br><ul><li>`height(length(height))`</li><li>`height[length(height)]`</li><li>`height[length[height]]`</li><li>`height(5)`</li></ul>,`height[length(height)]`
"<b> In the image below, the data frame is named rates. The statement `sd(rates[, </b><br><br>![Image](https://i.ibb.co/jvPPSRk/Captura-de-pantalla-2020-07-14-a-las-20-58-09.png?raw=png)<br><br><ul><li>sample with replacement</li><li>population</li><li>trimmed sample</li><li>sample <-- not sure</li></ul>",sample <-- not sure
<b> Which choice does R regard as an acceptable name for a variable?</b><br><ul><li>`Var_A!`</li><li>`\_VarA`</li><li>`.2Var_A`</li><li>`Var2_A`</li></ul>,`Var2_A`
"<b> What is the principal difference between an array and a matrix?</b><br><ul><li>A matrix has two dimensions, while an array can have three or more dimensions.</li><li>An array is a subtype of the data frame, while a matrix is a separate type entirely.</li><li>A matrix can have columns of different lengths, but an array's columns must all be the same length.</li><li>A matrix may contain numeric values only, while an array can mix different types of values.</li></ul>","A matrix has two dimensions, while an array can have three or more dimensions."
<b> Which is not a property of lists and vectors?</b><br><ul><li>type</li><li>length</li><li>attributes</li><li>scalar</li></ul>,scalar
"<b> In the image below, the data frame on lines </b><br><br>![Image](https://i.ibb.co/8DL1HCV/Captura-de-pantalla-2020-07-14-a-las-18-33-34.png?raw=png)<br><br><ul><li>StDf[1:2,-3]</li><li>StDf[1:2,1]</li><li>StDf[1:2,]</li><li>StDf[1,2,]</li></ul>","StDf[1:2,1]"
"<b> Which function displays the first five rows of the data frame named pizza?</b><br><ul><li>BOF(pizza, 5)</li><li>first(pizza, 5)</li><li>top(pizza, 5)</li><li>head(pizza, 5)</li></ul>","head(pizza, 5)"
"<b> You accidentally display a large data frame on the R console, losing all the statements you entered during the current session. What is the best way to get the prior </b><br><ul><li>console(-25)</li><li>console(reverse=TRUE)</li><li>history()</li><li>history(max.show = 25)</li></ul>",history(max.show = 25)
"<b> d.pizza is a data frame. It's a column named temperature contains only numbers. If you extract temperature using the [] accessors, its class defaults to numeric. How can you access temperature so that it retains the class of data.frame?</b><br><br>```<br>> class( d.pizza[ , ""temperature"" ] )<br>> ""numeric""<br>```<br><br><ul><li>`class( d.pizza( , ""temperature"" ) )`</li><li>`class( d.pizza[ , ""temperature"" ] )`</li><li>`class( d.pizza$temperature )`</li><li>`class( d.pizza[ , ""temperature"", drop=F ] )`</li></ul>","`class( d.pizza[ , ""temperature"", drop=F ] )`"
"<b> What does c contain?</b><br><br>```<br>a <- c(3,3,6.5,8)<br>b <- c(7,2,5.5,10)<br>c <- a < b<br>```<br><br><ul><li>[1] NaN</li><li>[1] -4</li><li>[1] 4 -1 -1 2</li><li>[1] TRUE FALSE FALSE TRUE</li></ul>",[1] TRUE FALSE FALSE TRUE
"<b> Review the statements below. Does the use of the dim function change the class of y, and if so what is y's new class?</b><br><br>```<br>> y <- 1:9<br>> dim(y) <- c(3,3)<br>```<br><br><ul><li>No, y's new class is ""array"".</li><li>Yes, y's new class is ""matrix"".</li><li>No, y's new class is ""vector"".</li><li>Yes, y's new class is ""integer"".</li></ul>","Yes, y's new class is ""matrix""."
"<b> What is `mydf$y` in this code?</b><br><br>`mydf <- data.frame(x=1:3, y=c(""a"",""b"",""c""), stringAsFactors=FALSE)`<br><br><ul><li>list</li><li>string</li><li>factor</li><li>character vector</li></ul>",character vector
"<b> How does a vector differ from a list?</b><br><ul><li>Vectors are used only for numeric data, while lists are useful for both numeric and string data.</li><li>Vectors and lists are the same thing and can be used interchangeably.</li><li>A vector contains items of a single data type, while a list can contain items of different data types.</li><li>Vectors are like arrays, while lists are like data frames.</li></ul>","A vector contains items of a single data type, while a list can contain items of different data types."
<b> What statement shows the objects on your workspace?</b><br><ul><li>list.objects()</li><li>print.objects()</li><li>getws()</li><li>ls()</li></ul>,ls()
<b> What function joins two or more column vectors to form a data frame?</b><br><ul><li>rbind()</li><li>cbind()</li><li>bind()</li><li>coerce()</li></ul>,cbind()
"<b> Review line </b><br><br>```<br>1 mylist <- list(1,2,""C"",4,5)<br>2 unlist(mylist)<br>```<br><br><ul><li>[1] 1 2 4 5</li><li>""C""</li><li>[1] ""1"" ""2"" ""C"" ""4"" ""5""</li><li>[1] 1 2 C 4 5</li></ul>","[1] ""1"" ""2"" ""C"" ""4"" ""5"""
<b> What is the value of y in this code?</b><br><br>```<br>x <- NA<br>y <- x/1<br>```<br><br><ul><li>Inf</li><li>Null</li><li>NaN</li><li>NA</li></ul>,NA
"<b> Two variable in the mydata data frame are named Var</b><br><ul><li>`cor.test(Var1 ~ Var2)`</li><li>`cor.test(mydata$(Var1,Var2))`</li><li>`cor.test(mydata$Var1,mydata$Var2)`</li><li>`cor.test(Var1,Var2, mydata)`</li></ul>","`cor.test(mydata$Var1,mydata$Var2)`"
"<b> A data frame named d.pizza is part of the DescTools package. A statement is missing from the following R code and an error is therefore likely to occur. Which statement is missing?</b><br><br>```<br>library(DescTools)<br>deliver <- aggregate(count,by=list(area,driver), FUN=mean)<br>print(deliver)<br>```<br><br><ul><li>`attach(d.pizza)`</li><li>`summarize(deliver)`</li><li>`mean <- rbind(d.pizza,count)`</li><li>`deliver[!complete.cases(deliver),]`</li></ul>",`attach(d.pizza)`
<b> How to name rows and columns in DataFrames and Matrices F in R?</b><br><ul><li>data frame: names() and rownames() matrix: colnames() and row.names()</li><li>data frame: names() and row.names() matrix: dimnames() (not sure)</li><li>data frame: colnames() and row.names() matrix: names() and rownames()</li><li>data frame: colnames() and rownames() matrix: names() and row.names()</li></ul>,data frame: names() and row.names() matrix: dimnames() (not sure)
"<b> Which set of two statements-followed by the cbind() function-results in a data frame named vbound?</b><br><br>- [ ]<br>```r<br>v1<-list(1,2,3)<br>v2<-list(c(4,5,6))<br>vbound<-cbind(v1,v2)<br>```<br>- [ ]<br>```r<br>v1<-c(1,2,3)<br>v2<-list(4,5,6))<br>vbound<-cbind(v1,v2)<br>```<br>- [ ]<br>```r<br>v1<-c(1,2,3)<br>v2<-c(4,5,6))<br>vbound<-cbind(v1,v2)<br>```<br><br><ul></ul>",No answer found
"<b> ournames is a character vector. What values does the statement below return to Cpeople?</b><br><br>`Cpeople <- ournames %in% grep(""^C"", ournames, value=TRUE)`<br><br><ul><li>records where the first character is a C</li><li>any record with a value containing a C</li><li>TRUE or FALSE, depending on whether any character in ournames is C</li><li>TRUE and FALSE values, depending on whether the first character in an ournames record is C</li></ul>","TRUE and FALSE values, depending on whether the first character in an ournames record is C"
"<b> What is the value of names(v[</b><br><br>```r<br>v <- 1:3<br>names(v) <- c(""a"", ""b"", ""c"")<br>v[4] <- 4<br>```<br><br><ul><li>""""</li><li>d</li><li>NULL</li><li>NA</li></ul>",""""""
"<b> Which of the following statements doesn't yield the code output below. Review the following code. What is the result of line </b><br><br>```r<br>x <- c(1, 2, 3, 4)<br>Output: [1] 2 3 4<br>```<br><br><ul><li>x[c(2, 3, 4)]</li><li>x[-1]</li><li>x[c(-1, 0, 0, 0)]</li><li>x[c(-1, 2, 3, 4)]</li></ul>","x[c(-1, 2, 3, 4)]"
<b> Given DFMerged <- merge(DF</b><br><br>![image](https://user-images.githubusercontent.com/52632898/139964478-9806a163-76b2-4f99-97bc-c925fdf6e388.png?raw=png)<br><br><ul><li>6</li><li>9</li><li>3</li><li>0</li></ul>,0
"<b> What does R return in response to the final statement?</b><br><br>```r<br>x<-5:8<br>names(x)<-letters[5:8]<br>x<br>```<br><br><ul><li>e f g h""5"" ""6"" ""7"" ""8""<br></li><li>5 6 7 8</li><li>e f g h</li><li>e f g h5 6 7 8<br></li></ul>",e f g h5 6 7 8<br>
"<b> How do you return ""October"" from x in this code?</b><br><br>```r<br>x<-as.Date(""2018-10-01"")<br>```<br><br><ul><li>attr()</li><li>months(x)</li><li>as.month(x)</li><li>month(x)</li></ul>",months(x)
"<b> How will R respond to the last line of this code?</b><br><br>```r<br>fact<-factor(c(""Rep"",""Dem"",""Dem"",""Rep""))<br>fact<br>[1] Rep Dem Dem Rep<br>Levels: Rep Dem<br>fact[2]<-""Ind""<br>```<br><br><ul><li>></li><li>[,2]Ind</li><li>invalid factor level, NA generated</li><li>Ind</li></ul>","invalid factor level, NA generated"
"<b> What does R return?</b><br><br>```r<br>StartDate<- as.Date(""2020/2/28"")<br>StopDate<- as.Date(""2020/3/1"")<br>StopDate-StartDate<br>```<br><br><ul><li>""1970-01-02""</li><li>time difference of one day</li><li>time difference of two days</li><li>error in x-y: nonnumeric argument to binary operator</li></ul>",time difference of two days
"<b> What does the expression `mtrx * mtrx` do ?</b><br><br>```r<br>> mtrx <- matrix( c(3,5,8,4), nrow= 2,ncol=2,byrow=TRUE)<br>> newmat <- mtrx * mtrx<br>```<br><br><ul><li>it transpose **mtrx**</li><li>it premultiplies the current **netwmat** row by the **newmat** column.</li><li>it returns the results of a matrix multiplication</li><li>It squares each cell in **mtrx**```r<br>> newmat<br>[,1] [,2]<br>[1,]    9   25<br>[2,]   64   16<br># The `%*%` operator gives matrix multiplication<br>> mtrx %*% mtrx<br>[,1] [,2]<br>[1,]   49   35<br>[2,]   56   56<br>```<br></li></ul>","It squares each cell in **mtrx**```r<br>> newmat<br>[,1] [,2]<br>[1,]    9   25<br>[2,]   64   16<br># The `%*%` operator gives matrix multiplication<br>> mtrx %*% mtrx<br>[,1] [,2]<br>[1,]   49   35<br>[2,]   56   56<br>```<br>"
<b> Which function in R combines different values into a single object?</b><br><ul><li>connect()</li><li>concat()</li><li>contact()</li><li>c()</li></ul>,c()
<b> Which file contains settings that R uses for all users of a given installation of R?</b><br><ul><li>Rdefaults.site</li><li>Renviron.site</li><li>Rprofile.site</li><li>Rstatus.site</li></ul>,Rprofile.site
"<b> If **mdf** is a data frame, which statement is true ?</b><br><ul><li>**ncol(mdf)** equals **length(mdf)**.</li><li>The number of rows must equals the number of columns.</li><li>The legnth of any column in **mdf** may differ from any other column in **mdf**</li><li>All columns must have the same data type.</li></ul>",**ncol(mdf)** equals **length(mdf)**.
"<b> A list can contain a list as an element. **MyList** has five columns, and the third column's item is a list of three items. How do you put all seven values in **MyList** into a single vector?</b><br><ul><li>vector(MyList, length = 7)</li><li>coerce(MyList, nrows = 1)</li><li>unlist(MyList)</li><li>coerce(MyList, nrows = 7)</li></ul>",unlist(MyList)
"<b> Which strings could be returned by the function ls(path = ""^V"")?</b><br><ul><li>ANOVAData, anovadata</li><li>VisitPCA, VarX</li><li>VisitPCA, varx</li><li>Xvar, Yvar</li></ul>","VisitPCA, VarX"
"<b> StDf is a data frame. Based on this knowledge, what does this statement return?</b><br><br>```r<br>StDf[, -1]<br>```<br><br><ul><li>all but the first row and first column of StDf</li><li>all but the final column of StDf</li><li>all but the first column of StDf</li><li>only the first column of StDf</li></ul>",all but the first column of StDf
<b> Which statement enables you to interactively open a single file?</b><br><ul><li>file.list()</li><li>file.select()</li><li>file.choose()</li><li>file.open()</li></ul>,file.choose()
"<b> How are these data types alike: logical, integer, numeric, and character?</b><br><ul><li>Each is a type of data frame.</li><li>Each is a type of atomic vector.</li><li>Each is a type of complex vector.</li><li>Each is a type of raw vector.</li></ul>",Each is a type of atomic vector.
"<b> What does the `MyMat[ ,</b><br><br>```r<br>MyMat = matrix(c(7, 9, 8, 6, 10, 12),nrow=2,ncol=3, byrow = TRUE)<br>```<br><br><ul><li>:```<br>[ ,3]<br>[1, ] 8<br>[2, ] 12<br>```<br></li><li>:```<br>[1] 8 12<br>```<br></li><li>:```<br>[1] 10 12<br>```<br></li><li>:```<br>[ ,3]<br>[1, ] 10<br>[2, ] 12<br>```<br></li></ul>",:```<br>[1] 8 12<br>```<br>
<b> What does the function `power.anova.test` return?</b><br><ul><li>the probability of making a Type I error</li><li>the probability of not making a Type II error</li><li>the probability of making a Type II error</li><li>the probability of not making a Type I error</li></ul>,the probability of not making a Type II error
"<b> Review the statement below. What is the effect of `covariate:factor` on the analysis?</b><br><br>```r<br>result <- lm(outcome ~ covariate + factor + covariate:factor, data = testcoef)<br>```<br><br><ul><li>It forces the intercepts of the individual regressions to zero.</li><li>It calls for the effect of the covariate **within each level of the factor**.</li><li>It calls for the effect of each variable from covariate to factor in testcoef.</li><li>It forces the covariate to enter the equation before the factor levels.```r<br># Example call to demonstrate.  `Species` is a Factor.  Petal.Length, Petal.Width are numeric.<br># see `help(formula)` for more details on the formula specification.  `:` is ""effect modification"" or ""interaction""<br>> summary(lm(Petal.Length ~ Petal.Width + Species + Petal.Width:Species, data = iris))<br>...<br>Petal.Width:Speciesversicolor   1.3228     0.5552   2.382   0.0185 *<br>Petal.Width:Speciesvirginica    0.1008     0.5248   0.192   0.8480<br>...<br>```<br></li></ul>",It calls for the effect of the covariate **within each level of the factor**.
"<b> A variable whose type is numeric can contain which items?</b><br><ul><li>integers and real values</li><li>integers, real, and raw values</li><li>real values only</li><li>integers, real, and logical values</li></ul>",real values only
<b> What is the legitimate name of a data class in R?</b><br><ul><li>property</li><li>integer</li><li>number</li><li>variant</li></ul>,integer
<b> How do you extract the values above the main diagonal from a square matrix named `Rmat`?</b><br><ul><li>`Rmat[upper.tri(Rmat)]`</li><li>`upper.triangular(Rmat)`</li><li>`upper.tri(Rmat)`</li><li>`upper.diag(Rmat)`</li></ul>,`Rmat[upper.tri(Rmat)]`
"<b> `x` is a vector of type integer, as shown on line </b><br><br>`x <- c(12L, 6L, 10L, 8L, 15L, 14L, 19L, 18L, 23L, 59L)`<br><br><ul><li>numeric</li><li>integer</li><li>single</li><li>double</li></ul>",double
"<b> A list named `a` is created using the statement below. Which choice returns TRUE?</b><br><br>`a <- list(""10"", TRUE, 5.6)`<br><br><ul><li>is.list(a[1])</li><li>is.numeric(a[1])</li><li>is.logical(a[1])</li><li>is.character(a[1])</li></ul>",is.list(a[1])
<b> How do you obtain the row numbers in a data frame named `pizza` for which the value of `pizza$delivery_min` is greater than or equal to </b><br><ul><li>:```r<br>late_delivery <- pizza$delivery_min >= 30<br>index_late <- index(late_delivery)<br>index_late<br>```<br></li><li>:```r<br>late_delivery <- pizza$delivery_min >= 30<br>rownum_late <- rownum(late_delivery)<br>rownum_late<br>```<br></li><li>:```r<br>late_delivery <- pizza$delivery_min >= 30<br>which_late <- which(late_delivery)<br>which_late<br>```<br></li><li>:```r<br>late_delivery <- pizza$delivery_min >= 30<br>late <- piza$late_delivery<br>pizza$late<br>```<br></li></ul>,:```r<br>late_delivery <- pizza$delivery_min >= 30<br>which_late <- which(late_delivery)<br>which_late<br>```<br>
"<b> Which function returns `[</b><br><br>`indat <- c(""Ash Rd"",""Ash Cir"",""Ash St"")`<br><br><ul><li>grepl(""[Rd|Ave|Dr|St]"", indat)</li><li>grepl(""Rd|Ave|Dr|St"", indat)</li><li>grepl(""Rd,Ave,Dr,St"", indat)</li><li>grepl(""[Rd],[Ave],[Dr],[St]"", indat)</li></ul>","grepl(""Rd|Ave|Dr|St"", indat)"
"<b> Which statement returns the fourth row of a data frame named _fish_?</b><br><ul><li>fish[4, ]</li><li>fish( ,4)</li><li>fish(4, )</li><li>fish{4, }</li></ul>","fish[4, ]"
"<b> What is the value of _csum_?</b><br><br>```<br>a <- c(1.2, 2, 3.5, 4)<br>b <- c(1.2, 2.2, 3.5, 4)<br>csum <-sum(a == b)<br>```<br><br><ul><li>8</li><li>3</li><li>0.2</li><li>21.6</li></ul>",3
"<b> A list named _a_ is created using the statement below. Which choice returns TRUE?</b><br><br>```<br>a <- list(""10"", TRUE, 5.6)<br>```<br><br><ul><li>is.list(a[1])</li><li>is.numeric(a[1])</li><li>is.logical(a[1])</li><li>is.character(a[1])</li></ul>",is.list(a[1])
<b> What is the result of these three lines of code?</b><br><br>```r<br>vect1 <- c(1:4)<br>vect2 <- c(1:2)<br>vect1 * vect2<br>```<br><br><ul><li>[1] 1 4 3 8</li><li>ERROR</li><li>[1] 1 2 3 4 1 2</li><li>[1] 1 2 3 4 2 4 6 8</li></ul>,[1] 1 4 3 8
"<b> Which choice returns [</b><br><ul><li>format(as.POSIXct(""Sep-28-2019 07:54:31 AM"",format='%b%d%Y'))</li><li>as.POSIXlt(""Sep-28-2019 07:54:31 AM"",format='%b-%d-%Y')</li><li>as.POSIXct(""Sep-28-2019 07:54:31 AM UTC"")</li><li>format(as.POSIXct(""Sep-28-2019 07:54:31 AM UTC"",format='%b-%d-%Y'))</li></ul>","format(as.POSIXct(""Sep-28-2019 07:54:31 AM UTC"",format='%b-%d-%Y'))"
"<b> The variable potus is a character vector, as shown in line </b><br><br>```r<br>1 potus <- c(""GHW Bush"", ""Clinton"", ""GW Bush"", ""Obama"")<br>Results: [1] ""GHW BUsh"" ""Clinton"" ""Obama""<br>```<br><br><ul><li>potus[-""GW Bush""]</li><li>potus[1:2 4]</li><li>potus[-3]</li><li>potus[1,2,4]</li></ul>",potus[-3]
<b> A data frame contains two factor -fact</b><br><ul><li>anova(lm(outcome ~ fact1 : fact2))</li><li>anova(lm(outcome ~ fact1 \* fact2))</li><li>anova(lm(outcome ~ fact1 + fact2))</li><li>anova(lm(outcome ~ fact1 + fact2 + fact1 : fact2))</li></ul>,anova(lm(outcome ~ fact1 : fact2))
"<b> Review line </b><br><br>```r<br>1 myvect <- c(-2,-1,0)<br>2 as.logical(myvect)<br>```<br><br><ul><li>[1]-2 -1 0</li><li>[1]TRUE TRUE FALSE</li><li>[1]FALSE FALSE TRUE</li><li>[1]NA NA NA</li></ul>",[1]TRUE TRUE FALSE
