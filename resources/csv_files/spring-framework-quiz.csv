"<b> How filters are used in Spring Web?</b><br><ul><li>Filters are called before a request hits the DispatcherServlet. They allow for interception-style, chained processing of web requests for security, timeouts, and other purposes.</li><li>Filters are used with a checksum algorithm that will filter invalid bytes out of a byte stream request body and allow for processing of HTTP requests from the DispatcherRequestServlet.</li><li>Filters are used with a checksum algorithm that will filter invalid bytes out of an octet stream a multipart upload and allow for chained processing of WebDispatcherServlet requests.</li><li>Filters are used to validate request parameters out of the byte stream request body and allow for processing of requests from the DispatcherRequestServlet.</li></ul>","Filters are called before a request hits the DispatcherServlet. They allow for interception-style, chained processing of web requests for security, timeouts, and other purposes.<br><br>[HandlerInterceptors vs. Filters in Spring MVC](https://www.baeldung.com/spring-mvc-handlerinterceptor-vs-filter). Also there is no such thing as DispatcherRequestServlet in Spring.<br>"
"<b> How is a resource defined in the context of a REST service?</b><br><ul><li>A resource is the actual String literal that composes a URI that is accessed on a RESTful web service.</li><li>It is an abstract concept that represents a typed object, data, relationships, and a set of methods that operate on it that is accessed via a URI.</li><li>A REST service has a pool of resources composed of allocations of memory that allow a request to be processed.</li><li>A resource for a REST service is an explicit allocation of a thread or CPU cycles to allow a request to be processed.</li></ul>","It is an abstract concept that represents a typed object, data, relationships, and a set of methods that operate on it that is accessed via a URI."
<b> Which of these is a valid Advice annotation?</b><br><ul><li>@AfterError</li><li>@AfterReturning</li><li>@AfterException</li><li>@AfterExecution</li></ul>,@AfterReturning
"<b> What does a ViewResolver do?</b><br><ul><li>It supports internationalization of web applications by detecting a user's locale.</li><li>It generates a view by mapping a logical view name returned by a controller method to a view technology.</li><li>It creates a unique view determined by the uers's browser type,supporting cross-browser compatibility.</li><li>It maps custom parameters to SQL views in the database, allowing for dynamic content to be created in the response.</li></ul>",It generates a view by mapping a logical view name returned by a controller method to a view technology.
"<b> How are Spring Data repositories implemented by Spring at runtime?</b><br><ul><li>Spring automatically generated code for you based on your YAML config that defined a MethodInterceptor chain that intercept calls to the instance and computed SQL on the fly.</li><li>A JDK proxy instance is created, which backs the repository interface, and a MethodInterceptor intercepts calls to the instance and routes as required.</li><li>The Spring JDK proxy creates a separate runtime process that acts as an intermediary between the database and the Web server, and intercepts calls to the instance and handles requests.</li><li>Spring automatically generated code for you based on your XML config files that define a SpringMethodAutoGeneration factory that intercepts calls to the instance and creates dynamic method that computer SQL on the fly.</li></ul>","A JDK proxy instance is created, which backs the repository interface, and a MethodInterceptor intercepts calls to the instance and routes as required."
"<b> What is SpEL and how is it used in Spring?</b><br><ul><li>SpEL(Spring Expression Language) runs in the JVM and can act as a drop-in replacement for Groovy or other languages.</li><li>SpEL(Spring Expression Language) supports boolean and relational operators and regular expressions, and is used for querying a graph of objects at runtime.</li><li>SpEL(Spring Expression Language) allows you to build, configure,and execute tasks such as building artifacts and downloading object dependencies.</li><li>SpEL(Spring Expression Language) natively transpiles one JVM language to another, allowing for greater flexibility.</li></ul>","SpEL(Spring Expression Language) supports boolean and relational operators and regular expressions, and is used for querying a graph of objects at runtime."
<b> The process of linking aspects with other objects to create an advised object is called</b><br><ul><li>dynamic chaining</li><li>banding</li><li>weaving</li><li>interleaving</li></ul>,weaving
"<b> How are JDK Dynamic proxies and CGLIB proxies used in Spring?</b><br><ul><li>JDK Dynamic proxy can proxy only interface, so it is used if the target implements at least one interface. A CGLIB proxy can create a proxy by subclassing and is used if the target does not implement an interface.</li><li>Only JDK Dynamic proxies are used in the Spring Bean Lifecycle. CGLIB proxies are used only for integrating with other frameworks.</li><li>Only CGLIB proxies are used in the Spring Bean Lifecycle. JDK Dynamic proxies are used only for integrating with other frameworks.</li><li>JDK Dynamic proxy can only using an abstract class extended by a target. A CGLIB proxy can create a proxy through bytecode interweaving and is used if the target does not extend an abstract class.</li></ul>","JDK Dynamic proxy can proxy only interface, so it is used if the target implements at least one interface. A CGLIB proxy can create a proxy by subclassing and is used if the target does not implement an interface."
<b> Which of these is not a valid method on the JoinPoint interface?</b><br><ul><li>getArgs()</li><li>getExceptions()</li><li>getSignature()</li><li>getTarget()</li></ul>,getExceptions()
"<b> In what order do the @PostConstruct annotated method, the init-method parameter method on beans and the afterPropertiesSet() method execute?</b><br><ul><li>1. afterPropertiesSet() 2. init-method 3. @PostConstruct</li><li>1. @PostConstruct 2. afterPropertiesSet() 3. init-method</li><li>1. init-method 2. afterPropertiesSet() 3. @PostConstruct</li><li>You cannot use these methods together-you must choose only one.</li></ul>",1. @PostConstruct 2. afterPropertiesSet() 3. init-method
"<b> What is the function of the `@Transactional` annotation at the class level?</b><br><ul><li>It's a transaction attribute configured by `spring.security.transactions.xml` config file that uses Spring's transaction implementation and validation code.</li><li>It's a transaction that must actively validate by the bytecode of a transaction using Spring's `TransactionBytecodeValidator` class. Default Transaction behavior rolls back on validation exception but commits on proper validation</li><li>It creates a proxy that implements the same interface(s) as the annotated class, allowing Spring to inject behaviors before, after, or around method calls into the object being proxied.</li><li>It's a transaction that must be actively validated by Spring's `TransactionValidator` class using Spring's transaction validation code. Default Transaction behavior rolls back on validation exception.</li></ul>","It creates a proxy that implements the same interface(s) as the annotated class, allowing Spring to inject behaviors before, after, or around method calls into the object being proxied."
"<b> Which is a valid example of the output from this code (ignoring logging statements) ?</b><br><br>```java<br>@SpringBootApplication<br>public class App {<br>public static void main(String args[]) {<br>SpringApplication.run(App.class, args);<br>System.out.println(""startup"");<br>}<br>}<br>public class Print implements InitializingBean {<br>@Override<br>public void afterPropertiesSet() throws Exception {<br>System.out.println(""init"");<br>}<br>}<br>```<br><br><ul><li>Nothing will print</li><li>startupinit<br></li><li>init</li><li>startupExplanation: SpringApplication.run method returns the created Context, so main method will continue running and print ""startup"". Class Print is not a Spring Bean, because it is not annotated with @Component, so it will not be initialized.<br></li></ul>","startupExplanation: SpringApplication.run method returns the created Context, so main method will continue running and print ""startup"". Class Print is not a Spring Bean, because it is not annotated with @Component, so it will not be initialized.<br>"
"<b> Which println statement would you remove to stop this code throwing a null pointer exception?</b><br><br>```java<br>@Component<br>public class Test implements InitializingBean {<br>@Autowired<br>ApplicationContext context;<br>@Autowired<br>static SimpleDateFormat formatter;<br>@Override<br>public void afterPropertiesSet() throws Exception {<br>System.out.println(context.containsBean(""formatter"") + "" "");<br>System.out.println(context.getBean(""formatter"").getClass());<br>System.out.println(formatter.getClass());<br>System.out.println(context.getClass());<br>}<br>}<br>@Configuration<br>class TestConfig {<br>@Bean<br>public SimpleDateFormat formatter() {<br>return new SimpleDateFormat();<br>}<br>}<br>```<br><br><ul><li>formatter.getClass()</li><li>context.getClass()</li><li>context.getBean(""formatter"").getClass()</li><li>context.containsBean(""formatter"")</li></ul>",formatter.getClass()
<b> What is the root interface for accessing a Spring bean container?</b><br><ul><li>SpringInitContainer</li><li>ResourceLoader</li><li>ApplicationEventPublisher</li><li>BeanFactory</li></ul>,BeanFactory
<b> Which annotation can be used within Spring Security to apply method level security?</b><br><ul><li>@Secured</li><li>@RequiresRole</li><li>@RestrictedTo</li><li>@SecurePath</li></ul>,@Secured
"<b> What is the result of calling the map controller method using the HTTP request GET localhost:</b><br><br>```java<br>@RestController<br>public class SampleController {<br>@RequestMapping(""/map"")<br>public String map(@RequestParam(""bar"") String foo, @RequestParam(""foo"") String bar) {<br>return bar + foo;<br>}<br>}<br>```<br><br><ul><li>An InvalidParameterNameMappingException is thrown at runtime.</li><li>barfoo</li><li>foobar</li><li>A status code of 400 Bad Request is returned.</li></ul>",foobar
<b> What is the purpose of the @Lazy annotation and why would you use it?</b><br><ul><li>It prevents a bean from being created and injected until you run a specific CLI command. It reduces complexity in the application.</li><li>It can be applied to a bean so that the bean is not persisted in the database. It reduces the number of database operations.</li><li>It can be applied to a bean so that the bean is not created and injected until it is needed. It can help speed up startup time for your application.</li><li>It prevents a bean from being created and injected until it receives a HTTP request to a callback hook. It reduces disk footprint.</li></ul>,It can be applied to a bean so that the bean is not created and injected until it is needed. It can help speed up startup time for your application.
<b> What is dependency injection?</b><br><ul><li>a method by which objects define dependencies they need as abstractions that allows the framework to instantiate and configure them in a central location at runtime.</li><li>a paradigm where dependent code is injected into the bytecode of a Java application on a remote server.</li><li>a way of injecting remote dependencies into a pre-packaged JAR file from the file system.</li><li>a way of injecting remote dependencies into a pre-packaged WAR file from the file system.</li></ul>,a method by which objects define dependencies they need as abstractions that allows the framework to instantiate and configure them in a central location at runtime.
"<b> What is a RESTful web service?</b><br><ul><li>Reactive Enterprise Status Transfer is a web service comprising a set of guidelines and technical constraints for web services that monitor and alert of a set of mission-critical resources.</li><li>Representational State Transfer an architectural style for creating web services that includes client-server architecture, statelessness, cacheability, a layered system, and a uniform interface.</li><li>Redundant Enumerated State Transfer is a web service that provides redundancy in the case of failure and outlines technical constraints for web services that have access to resources.</li><li>Reactive Enterprise State Transfer is a web service comprising a set of guidelines and technical constraints for web services y that have access to resources and are async in nature.</li></ul>","Representational State Transfer an architectural style for creating web services that includes client-server architecture, statelessness, cacheability, a layered system, and a uniform interface."
"<b> What happens when a class is annotated with the @Controller annotation?</b><br><ul><li>A controller bean definition is defined in the servlet's WebApplicationContext. The class is marked as a web component, and you can map requests to controller methods.</li><li>A controller bean definition is defined in the Web Context, and Web Servlet is marked as a component that reads mapped controller requests from an XML config file.</li><li>A controller bean definition is defined in the Tomcat Context, and the Controller Servlet is marked as a web component that reads mapped controller requests from a YAML config file.</li><li>A controller bean definition is defined in the Servlet Context, and the Controller Servlet is marked as a component that reads mapped controller requests from an XML config file.</li></ul>","A controller bean definition is defined in the servlet's WebApplicationContext. The class is marked as a web component, and you can map requests to controller methods."
<b> Which property can be used to change the port of a Spring application?</b><br><ul><li>Port</li><li>spring.port</li><li>spring.settings.port</li><li>server.port</li></ul>,server.port
<b> What is the purpose of the @ResponseBody annotation?</b><br><ul><li>to validate the char array contained in a response to ensure that it is a valid character encoding</li><li>to generate a local byte stream from the body of a response that allows a request to be scanned for security risks</li><li>to indicate whether a handler method return value should be bound to the web response body in servlet environments</li><li>to ensure a ThreadLocal byte stream that allows a response to be encoded for reading directly into a socket stream</li></ul>,to indicate whether a handler method return value should be bound to the web response body in servlet environments
<b> How are mocking frameworks such as Mockito used with Spring?</b><br><ul><li>Mockito will spin up a mock web service hosted in a Docker container that can respond to HTTP requests to mock out third-party APIs.</li><li>Mockito can use annotations or factory methods to create mock objects that may be injected into tests in place of dependencies. The behavior of mocks can be explicitly configured.</li><li>Mockito will create mock users to repeatedly perform requests against your Spring application to test your app's ability to take load.</li><li>Mockito will spin up a mock web service hosted in a Docker container that can respond to RPC calls to mock out remote resources.</li></ul>,Mockito can use annotations or factory methods to create mock objects that may be injected into tests in place of dependencies. The behavior of mocks can be explicitly configured.
<b> What is the name of the central servlet that dispatches requests to controllers?</b><br><ul><li>DispatchingDelegatorServlet</li><li>DispatcherServlet</li><li>Router</li><li>FrontControllerServlet</li></ul>,DispatcherServlet
"<b> What is the purpose of the Spring IoC (Inversion of Control) container?</b><br><ul><li>It instantiates and configures objects, supplied at runtime, to classes that define them as a dependency.</li><li>It allows the front-end code to manage the ResponseBody objects provided by a back-end REST API.</li><li>It allows a database to define business objects via a shared schema at compile time.</li><li>It facilitates a remote server to configure a local application.</li></ul>","It instantiates and configures objects, supplied at runtime, to classes that define them as a dependency."
"<b> What is component scanning?</b><br><ul><li>feature that scans packages for classes with specific annotations and, when found, creates their bean definitions within the IoC container</li><li>paradigm where bytecode is actively scanned to identify additional optimizations to inject into components in the application context</li><li>a method by which cloud repositories are scanned to identify components for injection into an IoC container</li><li>a method by which binary data in a database is searched to identify components for injection into the IoC container</li></ul>","feature that scans packages for classes with specific annotations and, when found, creates their bean definitions within the IoC container"
"<b> What does @SpringBootApplication do?</b><br><ul><li>This annotation takes the String literal passed into the annotation as a parameter and automatically generates all the code for your application as per the passed in template parameter.</li><li>This compound annotation applies the @Bootable, @Springify, and @StandardConfig annotations that launch a CLI tool after launching the Spring Boot WAR file that will guide you through a series of prompts to set up your app.</li><li>This annotation scans the provided spring-boot-config-construction.yaml file in your root directory and automatically generates all the code for your application as defined in the YAML file.</li></ul>","This compound annotation applies the @Bootable, @Springify, and @StandardConfig annotations that launch a CLI tool after launching the Spring Boot WAR file that will guide you through a series of prompts to set up your app."
<b> How does Spring Data facilitate queries against a datastore?</b><br><ul><li>Queries are explicitly coded in repository implementations using the Spring Data CriteriaBuilder.</li><li>Query metadata is stored in the underlying datastore and retrieved at runtime per repository.</li><li>Queries are derived from the signatures of methods on a Spring Data repository that contain keywords in their name for constructing the query logic.</li><li>A spring-data-queries.xml file contains queries within entity tags that specify the query logic for each repository.</li></ul>,Queries are derived from the signatures of methods on a Spring Data repository that contain keywords in their name for constructing the query logic.
<b> How does Spring generate bean names for classes annotated with @Component that do not specify a name?</b><br><ul><li>It uses the short name of the class with the first letter in lowercase.</li><li>It uses the short name of the class.</li><li>It uses the short name of the class in uppercase.</li><li>It uses the canonical name of the class in lowercase.</li></ul>,It uses the short name of the class with the first letter in lowercase.
<b> What is the delegating filter proxy?</b><br><ul><li>It's the servlet filter chain proxy that handles all requests to the route defined in spring.security.xml. All calls to the filter proxy are forwarded to the ErrorDispatcherServlet.</li><li>It's the servlet filter chain that handles requests to the route defined in spring.security.factories. All calls to the filter proxy y are forwarded to the ErrorServlet.</li><li>It's the servlet filter proxy delegating to a filter bean specified in web.xml. All calls to the filter proxy will be delegated to that servlet filter bean.</li><li>It's the web servlet daemon filter proxy that delegates to a bean specified in spring.security.factories. All calls to the filter proxy that do not contain a proper route will return an error.</li></ul>,It's the servlet filter proxy delegating to a filter bean specified in web.xml. All calls to the filter proxy will be delegated to that servlet filter bean.<br><br>[Overview and Need for DelegatingFilterProxy in Spring](https://www.baeldung.com/spring-delegating-filter-proxy)<br>
"<b> What value does Spring Boot Actuator provide?</b><br><ul><li>It helps monitor and manage a Spring Boot application by providing endpoints such as health checks, auditing, metrics gathering, and HTTP tracing.</li><li>It provides out-of-the-box functionality that integrates with third-party metrics platforms to automatically scale up and down the number of threads in threadpools.</li><li>It's a CLI that allows you to modify the configuration of a running Spring Boot application without the need for restarting or downtime.</li><li>It provides out-of-the-box functionality that integrates wiltr?third-party metrics platforms to automatically scale up and down the number of instances of the Spring Boot application.</li></ul>","It helps monitor and manage a Spring Boot application by providing endpoints such as health checks, auditing, metrics gathering, and HTTP tracing.<br><br>[Spring Boot Actuator](https://www.baeldung.com/spring-boot-actuators)<br>"
<b> What is the purpose of the @ContextConfiguration annotation in a JUnit Test?</b><br><ul><li>It introspects the local machine and automatically provisions resources based on certain contextual configuration files.</li><li>It automatically generates comments for annotated classes on autowired dependencies to provide additional context about dependencies.</li><li>It defines metadata at the class-level to determine how to load or configure an ApplicationContext in Spring integration tests.</li><li>It automatically generates JavaDocs for annotated classes to provide additional context about the purpose of the class.</li></ul>,It defines metadata at the class-level to determine how to load or configure an ApplicationContext in Spring integration tests.<br><br>[@ContextConfiguration Example in Spring Test](https://www.concretepage.com/spring-5/contextconfiguration-example-spring-test)<br>
<b> How are authentication and authorization different?</b><br><ul><li>Authentication is the act of granting access to specific resources and functions based on config settings. Authorization is the act of introspecting a user's credentials to ensure they are not impersonating another user.</li><li>Authentication is the act of verifying certain resources and functions are actually valid. Authorization is the act of verifying a user's credentials have not expired.</li><li>Authentication is the act of verifying that certain resources and functions actually exist in the database. Authorization is the act of verifying a user's credentials to ensure they are valid.</li><li>Authentication is validating that users are who they claim to be. Authorization is granting access to specific resources and functions.</li></ul>,Authentication is validating that users are who they claim to be. Authorization is granting access to specific resources and functions.
"<b> What is the purpose of the @RequestBody annotation?</b><br><ul><li>to create a ThreadLocal byte stream that allows a request to be encoded for reading directly into a database</li><li>to automatically generate a ThreadLocal byte stream from the body of a request that allows a request to scanned for security risks</li><li>to indicate whether an annotated handler method parameter should be bound to the web request body, which is converted by an HttpMessageConverter</li><li>to automatically validate the characters contained in a request to ensure that they are a valid character encoding</li></ul>","to indicate whether an annotated handler method parameter should be bound to the web request body, which is converted by an HttpMessageConverter"
<b> What is the DispatcherServlet and what is its function?</b><br><ul><li>The DispatcherServlet process daemon assigns a separate Web Servlet Container process to each HTTP request that comes into the web server.</li><li>It is a servlet that dispatches HTTP requests to registered handlers/controllers for processing.</li><li>The DispatcherServlet API assigns a separate Web Servlet Node process to each additional HTTP request that comes into the web server.</li><li>It is a servlet that dispatches an array of background daemon processes that allocate memory and CPU cycles to each request.</li></ul>,It is a servlet that dispatches HTTP requests to registered handlers/controllers for processing.
"<b> What is Spring Boot autoconfiguration?</b><br><ul><li>It triggers a local automated review of configuration files such as web.xml and detects possible security issues or automatically resolves circular dependencies.</li><li>It triggers an automated review of configuration by a web-based agent that reviews your existing web.xml file and detects possible security issues.</li><li>It's an opinionated, intelligent method of introspecting an app to configure beans that are likely to be needed. This configuration can be overridden over time with manual configuration.</li><li>It provides plug-in functionality while editing your web.xml and other config files that will autocomplete common dependencies while typing.</li></ul>","It's an opinionated, intelligent method of introspecting an app to configure beans that are likely to be needed. This configuration can be overridden over time with manual configuration."
"<b> Which are valid steps to take to enable JPA in Spring Boot?</b><br><ul><li>Add an @EnableJpaRepositories annotation to your configuration class and create a Spring Data Repository.</li><li>Add an @EnableJpaEntities annotation to your configuration class, create a Spring Data YAML configuration file, and manually update the Spring XML config files to define your repository locations.</li><li>Add an @EnableDbFunctionality annotation to your configuration class, create a Spring Data XML configuration file, and manually update the Spring factories file to define your repositories.</li><li>Add an @InitJpaEntities annotation to your configuration class, create a Spring Data properties configuration file, and manually update the Spring startup parameters to define your repository locations.</li></ul>",Add an @EnableJpaRepositories annotation to your configuration class and create a Spring Data Repository.
<b> What is a transaction in the context of Spring Data?</b><br><ul><li>a version-controlled schema change that is applied to a database</li><li>a sequence of actions representing a single unit of work managed as a single operation that can be either committed or rolled back</li><li>an encoded message and response between various shards of a database</li><li>an exchange or interaction between various worker nodes in a multithreaded environment</li></ul>,a sequence of actions representing a single unit of work managed as a single operation that can be either committed or rolled back
<b> Modularization of a concern that cuts across multiple classes is known as a(n)`____`.</b><br><ul><li>multiclass</li><li>aspect</li><li>crosscut</li><li>sidecut</li></ul>,aspect
<b> How do you inject a dependency into a Spring bean?</b><br><ul><li>any of these answers</li><li>Annotate a Setter method with the @Autowired annotation.</li><li>Specify parameters in the constructor with an optional @Autowired annotation.</li><li>Use field injection.</li></ul>,any of these answers
"<b> Consider the properties file application.properties. How would you load the property my.property?</b><br><br>```java<br>my.property=Test<br>```<br><br><ul><li>A```java<br>@Prop(""${my.property}"")<br>private String val;<br>```<br></li><li>B```java<br>@GetVal(""my.property"")<br>private String val;<br>```<br></li><li>C```java<br>@GetProperty(""${my.property}"")<br>private String val;<br>```<br></li><li>D```java<br>@Value(""${my.property}"")<br>private String val;<br>```<br></li></ul>","D```java<br>@Value(""${my.property}"")<br>private String val;<br>```<br>"
"<b> What is a bean in the context of Spring?</b><br><ul><li>a managed dependency defined by configuration metadata that can be injected into downstream classes</li><li>a binary-encoded, agnostic, named entity that is translatable between different data formats</li><li>a payload that is transferable between different services in a Service-Oriented Architecture (SOA)</li><li>a discrete piece of data that is encoded in a binary format for persisting to a file system</li></ul>",a managed dependency defined by configuration metadata that can be injected into downstream classes
<b> Which property is given precedence by Spring?</b><br><ul><li>application properties located in an application.properties file outside the application.jar</li><li>@PropertySource annotations on configuration classes</li><li>profile-specific application-{profile}.properties files</li><li>application properties located in an application.properties file inside the application.jar</li></ul>,profile-specific application-{profile}.properties files
"<b> In the Spring Bean lifecycle pictured, what should the third step of the process be?</b><br><br><img src=""spring-framework-quiz_spring-framework_q44""><br><br><ul><li>Persist bean definitions into a database</li><li>Instance bean objects</li><li>De-normalize bean definition</li><li>Use reflection to inject bean objects into the servlet container</li></ul>",Instance bean objects
<b> What Spring Boot property is used to set the logging level for the entire application in the application.properties file?</b><br><ul><li>logging.settings</li><li>log.level</li><li>root.logger.level</li><li>logging.level.root</li></ul>,logging.level.root<br><br>[Logging in Spring Boot](https://www.baeldung.com/spring-boot-logging)<br>
<b> What is a Spring bean uniquely identified?</b><br><ul><li>an autogenerated UUID</li><li>a unique String name</li><li>an auto-incremented Integer ID</li><li>an ID derived from its location in memory</li></ul>,a unique String name
<b> What is the difference between a JAR and a WAR distribution in Spring Boot?</b><br><ul><li>Spring Boot can create a self-executable WAR file that runs without needing a servlet container. A JAR file has to be deployed to an existing web container such as Tomcat with separate files for dependencies.</li><li>Spring Boot can create a JAR file that contains bytecode that interacts directly with the OS without needing a servlet container. A WAR file has to be deployed to an existing web container such as Tomcat with separate files for dependencies.</li><li>The Spring Boot JAR file will be deployed to a Servlet container such as Tomcat on an existing running web server locally. The WAR file will be deployed to a cloud-based servlet container.</li><li>Spring Boot can create a self-executable JAR file that contains all the dependencies and an embedded Servlet container. A WAR file has to be deployed to an existing web container such as Tomcat.</li></ul>,Spring Boot can create a self-executable JAR file that contains all the dependencies and an embedded Servlet container. A WAR file has to be deployed to an existing web container such as Tomcat.
"<b> How does the transaction propagation setting impact the behavior of transactions?</b><br><ul><li>It ensures that transactions that are commited to the database are propagated to all the shards of a clustered database system.</li><li>None of these answers is correct.</li><li>It guarantees that transactions that are submitted to the database cluster are propagated to all the nodes of a clustered database cloud.</li><li>It enforces that a logical transaction scope is created for each method that determines rollback-only status, with an outer transaction scope being logically independent from the inner transaction scope.</li></ul>","It enforces that a logical transaction scope is created for each method that determines rollback-only status, with an outer transaction scope being logically independent from the inner transaction scope."
"<b> What is printed when this code is run as a @SpringBootApplication?</b><br><br>```java<br>@Component<br>public class Test implements InitializingBean {<br>@Autowired<br>ApplicationContext context;<br>private TestService service;<br>public void setService(TestService service) {<br>this.service = service;<br>}<br>@Override<br>public void afterPropertiesSet() throws Exception {<br>System.out.print(context.containsBean(""testService"") + "" "");<br>System.out.println(service.getClass());<br>}<br>}<br>@Service<br>class TestService {}<br>```<br><br><ul><li>a null pointer stacktrace</li><li>true null</li><li>true package.TestService</li><li>false package.TestServiceExplanation: missing `@Autowired` on `private TestService service` or on the setter<br></li></ul>",a null pointer stacktrace
"<b> To register a custom filter that applies only to certain URL patterns, you should remove the **\_** annotation from the filter class and register a @Bean of type `_` in Spring @Configuration.</b><br><ul><li>@RequestMapping; WebRequest</li><li>@Controller; URLFilter</li><li>@WebFilter; ServletContextInitializer</li><li>@Component; FilterRegistrationBean</li></ul>",@Component; FilterRegistrationBean
"<b> What is the correct term for each definition bellow?</b><br><br>1. A predicate that matches join points.<br>2. A point during the execution of a program, such as the execution of a method or the handling of an exception.<br>3. An action taken by an aspect at a particular join point.<br>- [ ]<br>```<br>1. Pointcut<br>2. Advice<br>3. Join point<br>```<br>- [ ]<br>```<br>1. Join point<br>2. Pointcut<br>3. Advice<br>```<br>- [ ]<br>```<br>1. Advice<br>2. Pointcut<br>3. Join point<br>```<br>- [x]<br>```<br>1. Pointcut<br>2. Join point<br>3. Advice<br>```<br><br><ul></ul>",No answer found
"<b> How should passwords be stored?</b><br><ul><li>Passwords should be hashed using an adaptive one-way function such as bcrypt.</li><li>Passwords can be stored in a BASE64 encoded format if they are stored in a private database.</li><li>Passwords should be salted and hashed using the MD5 algorithm.</li><li>Passwords should be hashed using the SHA-1 algorithm, then salted to provide defence against rainbow table attacks.Explanation: sha-1 is not considered secure anymore: https://en.wikipedia.org/wiki/SHA-1#Attacks . With bcrypt you can select more complex hashes https://en.wikipedia.org/wiki/Bcrypt<br></li></ul>",Passwords should be hashed using an adaptive one-way function such as bcrypt.
<b> What methods does this Pointcut expression reference?</b><br><br>`@target(com.linkedin.annotation.Loggable)`<br><br><ul><li>any join point where the target object has a @Loggable annotation</li><li>any join point where the executing method has a @Loggable annotation</li><li>any method that implements Loggable</li><li>any method that extends Loggable</li></ul>,any join point where the target object has a @Loggable annotation<br><br>[Difference between @target and @within (Spring AOP)](https://stackoverflow.com/questions/51124771/difference-between-target-and-within-spring-aop)<br>
"<b> What is printed when this code is run as a @SpringBootApplication?</b><br><br>```java<br>@Component<br>public class Test implements InitializingBean {<br>@Autowired<br>ApplicationContext context;<br>@Autowired<br>SimpleDateFormat formatter;<br>@Override<br>public void afterPropertiesSet() throws Exception {<br>System.out.println(context.containsBean(""formatter""));<br>System.out.println(formatter.getClass());<br>}<br>}<br>@Configuration<br>class TestConfig2 {<br>@Bean<br>public final SimpleDateFormat formatter() {<br>return new SimpleDateFormat();<br>}<br>}<br>```<br><br><ul><li>true <br />&emsp; class java.text.SimpleDateFormat <br /><br></li><li>true <br />&emsp; SimpleDateFormat <br /><br></li><li>a NullPointerException stacktrace</li><li>a BeanDefinitionParsingException stacktraceExplanation: `@Bean`-method in `@Configuration` must be overridable. Remove the `final` keyword to fix.<br></li></ul>",a BeanDefinitionParsingException stacktraceExplanation: `@Bean`-method in `@Configuration` must be overridable. Remove the `final` keyword to fix.<br>
"<b> What is the purpose of a web application context?</b><br><ul><li>Configures a web application that is able to be deleted and re-created during runtime through hot swap. It adds a **recreateContext()** method and defines a root WebDaemon that must be bound to in the bootstrap process.</li><li>It configures a Spring application that is able to be modified on the fly during runtime through bytecode re-encoding. Also it adds an **updateContext()** method and defines a root WebServlet that must be bound to in the bootstrap process.</li><li>It provides configuration for a web application that is read-only while running. Also, it adds a **getServletContext()** method and defines an attribute name to which the root context must be bound in the bootstrap process.</li><li>It provides configuration for a Spring application that is updatable on the fly during runtime through bytecode weaving. Also it adds an **updateServletContext()** method and defines a root servlet that must be bound to in the bootstrap process.</li></ul>","It provides configuration for a web application that is read-only while running. Also, it adds a **getServletContext()** method and defines an attribute name to which the root context must be bound in the bootstrap process."
"<b> What is Spring AOP?</b><br><ul><li>Aspect-Oriented Programming allows you to define different cross-cutting aspects that isolate beans to be available only in certain environments and profiles.</li><li>Aspect-Oriented Programming enables you to perform profiling, which lets you develop different cross-cutting JVM performance-tuning profiles for different aspects of your applications.</li><li>Aspect-Oriented Programming enables the modularization of cross-cutting concerns so that repeated boilerplate logic, such as logging code, does not pollute business logic.</li><li>Aspect-Oriented Programming enables you to persist cross-cutting data across modularized shards of your database.</li></ul>","Aspect-Oriented Programming enables the modularization of cross-cutting concerns so that repeated boilerplate logic, such as logging code, does not pollute business logic."
"<b> Assuming username and password authentication is in place, what method on the Authentication object can be used to obtain the username?</b><br><ul><li>getPrincipal</li><li>getUsername</li><li>getUser</li><li>getDn</li></ul>",getPrincipal
"<b> Assuming no additional configuration is provided, what is the first selection criteria Spring uses to choose a bean when autowiring a property?</b><br><ul><li>none of these answers</li><li>bean type</li><li>bean size</li><li>bean name</li></ul>",bean name
"<b> What is the result of calling the map controller method using the following HTTP request?</b><br><br>```<br>POST localhost:8080/map<br>{""b"" : ""b"", ""d"" : ""d""}<br>```<br>```java<br>@RestController<br>public class SampleController {<br>@RequestMapping(""/map"")<br>public String map(@RequestBody SampleObject sampleObject) {<br>return sampleObject.getB() + sampleObject.getC();<br>}<br>}<br>```<br>```java<br>public class SampleObject {<br>String b;<br>String c;<br>public String getB() { return b; }<br>public void setB() { this.b = b; }<br>public String getC() { return c; }<br>public void setC() { this.c = c; }<br>}<br>```<br><br><ul><li>An InvalidRequestBodyException is thrown at runtime.</li><li>A MissingPropertyException is thrown at runtime.</li><li>The text ""bnull"" is returned in the response body.</li><li>The text ""a"" is returned in th response body.</li></ul>","The text ""bnull"" is returned in the response body."
"<b> What effect does private static have on the object service below?</b><br><br>```java<br>@SpringBootApplication<br>public class Question14 {<br>@Autowired<br>private static Service service;<br>public static void main(String[] args) {<br>SpringApplication.run(Question14.class, args);<br>}<br>}<br>@Component<br>class Service {}<br>```<br><br><ul><li>The application will result in a compile error because you can't autowire a private variable.</li><li>The application will compile and run, and service will have its dependency correctly injected by Spring.</li><li>The application will compile and run, but service will not be autowired because you cannot autowire a static class member.</li><li>The application will result in a compile error because you attempted to autowire a static variable.</li></ul>","The application will compile and run, but service will not be autowired because you cannot autowire a static class member."
"<b> What is a security context?</b><br><ul><li>The security context includes details of the principal currently using the app, which is stored by default in a `ThreadLocal` in an `Authentication` object.</li><li>The security context holds a list of all users and their encrypted passwords in memory and a list of resources that users are able to access.</li><li>The security context includes information about safe network IDs and IP addresses that are able to access the system.</li><li>The security context includes information about permissions on the local file system describing how local file resources can be accessed.</li></ul>","The security context includes details of the principal currently using the app, which is stored by default in a `ThreadLocal` in an `Authentication` object."
"<b> How might you map an incoming request to a controller method?</b><br><ul><li>Annotate a Controller class with `@Controller`. Then, using a specific naming convention for the methods, the `RequestMappingHandlerAdapter` will automatically configure your endpoints with the proper HTTP verb and URI.</li><li>Register a controller as a bean. Then, using a specific naming convention for the methods, the `RequestMappingHandlerAdapter` will automatically configure your endpoints based on values from the YAML config file.</li><li>Annotate a controller method with `@RequestMapping`, or a HTTP verb-specific annotation with a String URI pattern parameter (and other params as needed), which is supported through a `RequestMappingHandlerMapping/Adapter`.</li><li>Register a controller as a bean. Then, using a specific naming convention for the methods, the RequestMappingHandlerAdapter will automatically configure your endpoints based on values passed into the bean definition.</li></ul>","Annotate a controller method with `@RequestMapping`, or a HTTP verb-specific annotation with a String URI pattern parameter (and other params as needed), which is supported through a `RequestMappingHandlerMapping/Adapter`.<br><br>[Spring RequestMapping](https://www.baeldung.com/spring-requestmapping). Spring does not use naming conventions for web requests (unlike e.g. for the Data Repositories)<br>"
"<b> What methods does the Pointcut expression below reference?</b><br><br>`execution(* setter*(..))`<br><br><ul><li>any method with a name that contains the String ""setter"" with a single parameter</li><li>any method with a name that begins with String ""setter"" with a single parameter</li><li>any method with a name that begins with String ""setter""</li><li>any method with a name that contains the String ""setter""</li></ul>","any method with a name that begins with String ""setter""<br><br>[baeldung](https://www.baeldung.com/spring-aop-pointcut-tutorial#1-execution)<br>"
<b> What pattern does Spring MVC implement to delegate request processing to controllers?</b><br><ul><li>Front Controller</li><li>Facade</li><li>Reactive Chain</li><li>Observer</li></ul>,Front Controller
<b> What methods does this Pointcut expression?</b><br><br>`within(com.linkedin.service..*)`<br><br><ul><li>any join point only within the service package</li><li>This is not valid Pointcut expression</li><li>any method in a class that autowires a service bean</li><li>any join point within the service package or one of its subpackages</li></ul>,any join point within the service package or one of its subpackages
"<b> What is the output from invoking this Actuator endpoint in an unmodified Spring Boot application generated using Spring Intializr?</b><br><br>`/shutdown`<br><br><ul><li>The request would fail because the endpoint is disabled by default.</li><li>The Spring Boot app would return a URL and a list of currently running processes, and ask you to confirm the shutdown command.</li><li>The Spring Boot app would return a URL to confirm the shutdown command.</li><li>The Spring Boot app would begin shutting down.Reason: By default, all the endpoints are enabled in Spring Boot Application except /shutdown; this is, naturally, part of the Actuator endpoints.<br></li></ul>",The request would fail because the endpoint is disabled by default.
<b> How can you access the application context in a Spring integration test?</b><br><ul><li>The context is present in a ThreadLocal so you can just call getSpringApplicationContextInstance() anywhere in a test to get the current context.</li><li>Test classes can implement the ApplicationContextAware interface or autowire the ApplicationContext.</li><li>The context is automatically injected in every test so you can just call getSpringApplicationContextInstance() anywhere in a test to get the current context.</li><li>You can just add the parameter Context context to any method so that the context is automatically wired in.</li></ul>,"Test classes can implement the ApplicationContextAware interface or autowire the ApplicationContext.<br><br>[spring(dot)io](https://spring.io/blog/2011/06/21/spring-3-1-m2-testing-with-configuration-classes-and-profiles#:~:text=By%20default%20the%20ApplicationContext%20is,%40Resource%20%2C%20or%20%40Inject%20.)<br>"
<b> What interface can be specified as a parameter in a controller method signature to handle file uploads?</b><br><ul><li>FilePath</li><li>MultipartFile</li><li>File</li><li>MvcFile</li></ul>,MultipartFile
"<b> What is the purpose of this endpoint?</b><br><br>```java<br>@GetMapping(""api/v1/domain/resource/{id}"")<br>public Pojo getPojo(@PathVariable(""id"") String id) {<br>return testService.getPojo(id);<br>}<br>```<br><br><ul><li>This endpoint is designed to delete an object of the typetype Pojo with the passed in path variable</li><li>This endpoint is designed to return JSON mapped to the object type Pojo with the passed in id.</li><li>This endpoint returns the path variable that describes the Pojo's location within the container.</li><li>This endpoint is designed to update an existing resource of the object type Pojo with the passed in id.</li></ul>",This endpoint is designed to return JSON mapped to the object type Pojo with the passed in id.
<b> What property can be used to set the active Spring profiles</b><br><ul><li>active.profile</li><li>active.spring.profiles</li><li>spring.profiles.active</li><li>profiles</li></ul>,spring.profiles.active
"<b> Which statement is true regarding loading and instantiation of Spring factories?</b><br><ul><li>During startup, the SpringFactoryInitializr collects all files in the CONFIG-INF directory from each dependency and downloads binaries to run each file.</li><li>During startup, the SpringFactoriesLoader gets a list of config and collects all the files in META-INF directory from dependencies. Then it builds a composite list for application context configurations.</li><li>During shutdown, the SpringFactoryDestructor collects all the files in META-INF directory from each dependency and begins shutting down each thread and process.</li><li>During startup and shutdown, the SpringFactoryInitializr downloads project configs for all configured dependencies.</li></ul>","During startup, the SpringFactoriesLoader gets a list of config and collects all the files in META-INF directory from dependencies. Then it builds a composite list for application context configurations."
<b> What methods does this Pointcut expression reference?</b><br><br>```java<br>execution(* com.linkedin.TestService.*(..))<br>```<br><br><ul><li>all methods of classes in the com.linkedin.TestService package</li><li>all methods of classes in the com.linkedin.TestService package annotated whith @Service</li><li>This Pointcut is not valid.</li><li>all methods defined by the TestService interface</li></ul>,all methods of classes in the com.linkedin.TestService package
"<b> When configuring an application, which configuration is given precedence by Spring?</b><br><ul><li>profile specific application-{profile}.properties files</li><li>Java System Properties</li><li>application properties located in an application.properties file inside the application.jar</li><li>profile specific application-{profile}.properties files located outside the application.jar</li></ul>",profile specific application-{profile}.properties files located outside the application.jar
<b> What interface is used to represent a permission in Spring Security?</b><br><ul><li>GrantedAuthority</li><li>SecurityChain</li><li>PermissionMatrix</li><li>AccessRule</li></ul>,AccessRule
"<b> What is the difference between constructor injection and setter injection?</b><br><ul><li>Constructor injection overrides setter injection.</li><li>Setter injection creates a new instance if any modification occurs.</li><li>You can't use constructor injection for partial injection.</li><li>Constructor injection is more flexible than setter injection.[Explanation] There are many key differences between constructor injection and setter injection.<br>Partial dependency: can be injected using setter injection but it is not possible by constructor. Suppose there are 3 properties in a class, having 3 arg constructor and setters methods. In such case, if you want to pass information for only one property, it is possible by setter method only.<br>Overriding: Setter injection overrides the constructor injection. If we use both constructor and setter injection, IOC container will use the setter injection.<br>Changes: We can easily change the value by setter injection. It doesn't create a new bean instance always like constructor. So setter injection is flexible than constructor injection.<br></li></ul>",You can't use constructor injection for partial injection.
"<b> Which println would you remove to stop this code from throwing a null pointer exception?</b><br><br>```java<br>@Component<br>public class Test implements InitializingBean {<br>@Autowired<br>ApplicationContext context;<br>@Autowired<br>static SimpleDateFormat formatter;<br>@Override<br>public void afterPropertiesSet() throws Exception {<br>System.out.println(context.containsBean(""formatter"") + "" "");<br>System.out.println(context.getBean(""formatter"").getClass());<br>System.out.println(formatter.getClass());<br>System.out.println(context.getClass());<br>}<br>}<br>@Configuration<br>class TestConfig {<br>@Bean<br>public SimpleDateFormat formatter() {<br>return new SimpleDateFormat();<br>}<br>}<br>```<br><br><ul><li>formatter.getClass()</li><li>context.containsBean(""formatter"")</li><li>context.getBean(""formatter"").getClass()</li><li>context.getClass()Explanation: Here only one line can throw NPE. Calling getClass() from context.getBean(""formatter"") can potentially throw NPE if context.getBean(""formatter"") will return null.<br></li></ul>","context.getBean(""formatter"").getClass()"
"<b> What is the default rollback policy?</b><br><ul><li>A rollback is triggered during any error that occurs during the transaction.</li><li>When an instance or subclass of Exception is thrown, this triggers a rollback, while any runtime exceptions do not.</li><li>Anytime an instance or subclass of Throwable is thrown, this triggers a rollback.</li><li>When an instance or subclass of RuntimeException is thrown, this triggers a rollback, while any checked Exception does not.</li></ul>","When an instance or subclass of RuntimeException is thrown, this triggers a rollback, while any checked Exception does not."
"<b> What is the difference between a CrudRepository and a JpaRepository?</b><br><ul><li>The CrudRepository extends the PagingAndSortingRepository, while the JpaRepository does not.</li><li>The CrudRepository exposes a superset of interface methods containing every datastore-specific method supported by Spring data. The JpaRepository contains only those specific to Spring Data JPA.</li><li>The CrudRepository is a base interface within Spring Data core that exposes a dedicated set of functions. The JpaRepository is a store-specific interface that exposes functionality specific to JPA.</li><li>The CrudRepository is part of the Java EE API, while JpaRepository is specific to Spring Data.</li></ul>",The CrudRepository exposes a superset of interface methods containing every datastore-specific method supported by Spring data. The JpaRepository contains only those specific to Spring Data JPA.
"<b> What is the security filter chain?</b><br><ul><li>It's a security filter chain that provides authentication with manual intervention such that multiple administrators of the system are able to approve users with auditability and traceability.</li><li>It's a series of user-completed activities—such as password authorization, token verification, and many others—that require multiple factors of authentication to increase the level of security in the system.</li><li>It's a servlet filter chain where each filter has a specific responsibility such as security context, user and password authorization, exception translation, or filter security interception, processed in order.</li><li>It's a security filter chain that consumes multiple factors of authentication—such as password, token verification, biometrics, and IP whitelisting—to successfully log a user into the system.</li></ul>","It's a servlet filter chain where each filter has a specific responsibility such as security context, user and password authorization, exception translation, or filter security interception, processed in order."
<b> Which is not a valid stereotype annotation?</b><br><ul><li>@Component</li><li>@Service</li><li>@HtmlController</li><li>@Controller</li></ul>,@HtmlController
"<b> Which statement is true regarding loading and instantiation of Spring factories?</b><br><ul><li>During startup, the SpringFactoriesLoader gets a list of configs and collects all the files in META-INF directory from dependencies. Then it builds a composite list for application context configurations.</li><li>During shutdown, the SpringFactoryDestructor collects all the files in META-INF directory from each dependency and begins shutting down each thread and process.</li><li>During startup, the SpringFactoryInitializr collects all files in the CONFIG-INF directory from each dependency and downloads binaries to run each file.</li><li>During startup and shutdown, the SpringFactoryInitializr downloads project configs for all configured dependencies.</li></ul>","During startup, the SpringFactoriesLoader gets a list of configs and collects all the files in META-INF directory from dependencies. Then it builds a composite list for application context configurations."
<b> What is a transaction isolation level?</b><br><ul><li>executing each transaction in its own dedicated threadpool to facilitate thread isolation</li><li>facilitating each transaction to occur on its own dedicated vCPU to guarantee throughput</li><li>the level of visibility and access a transaction has to the units of work of other transactions such as uncommitted writes</li><li>executing each transaction on its own process to provide resource isolation</li></ul>,the level of visibility and access a transaction has to the units of work of other transactions such as uncommitted writes
"<b> What does the statement ""Spring offers fully-typed advice"" mean?</b><br><ul><li>You declare the parameters you need in the advice signature rather than work with Object[] arrays.</li><li>You work with a collection of Objects that need to be explicitly casted.</li><li>You work with an array of a Generic type T[] instead of Object[] arrays.</li><li>You are able to undo type erasure in the Object[] that is exposed</li></ul>",You work with an array of a Generic type T[] instead of Object[] arrays.
"<b> Which are considered to be typical, common, cross-cutting concerns that would be a good fit for AOP? (Choose </b><br><br>- A. Creating SQL queries<br>- B. Logging<br>- C. Filtering, sorting and transforming data<br>- D. Transaction management<br>- E. Audit logging<br>- F. Business logic<br><br><ul><li>A, D, F</li><li>D, E, F</li><li>A, B, F</li><li>B, D, E</li></ul>","B, D, E"
"<b> Which of the Service implementations will be created first?</b><br><br>```java<br>@SpringBootApplication<br>public class App {<br>@Autowired<br>Service service;<br>public static void main(String[] args) {<br>SpringApplication.run(App.class, args);<br>}<br>}<br>@Primary<br>@Component<br>class Service2Impl implements Service {<br>Service2Impl() {<br>System.out.println(""Service2"");<br>}<br>}<br>@Component(""Service"")<br>class Service1Impl implements Service {<br>Service1Impl() {<br>System.out.println(""Service1"");<br>}<br>}<br>interface Service{}<br>```<br><br><ul><li>Service1</li><li>Service2</li><li>A NullPointerException is thrown at runtime.</li><li>There is no way to know until runtime.Explaination: [Primary indicates that a bean should be given preference when multiple candidates are qualified to autowire a single-valued dependency](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Primary.html)<br></li></ul>",Service2
<b> What methods does this Pointcut expression reference?</b><br><br>```java<br>execution(* com.linkedin.service..*.*(..))<br>```<br><br><ul><li>all methods defined in the service package or one of it's subpackages</li><li>all methods defined in the service package</li><li>The pointcut is not valid.</li><li>all methods defined in a service interface</li></ul>,all methods defined in the service package or one of it's subpackages
